{
  "contractName": "TakaFactory",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_feeToSetter",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "token0",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token1",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "pair",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "PairCreated",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "allPairs",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "feeTo",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "feeToSetter",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "getPair",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "allPairsLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenA",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenB",
          "type": "address"
        }
      ],
      "name": "createPair",
      "outputs": [
        {
          "internalType": "address",
          "name": "pair",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_feeTo",
          "type": "address"
        }
      ],
      "name": "setFeeTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_feeToSetter",
          "type": "address"
        }
      ],
      "name": "setFeeToSetter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeToSetter\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"PairCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allPairs\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allPairsLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"createPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeTo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeToSetter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"getPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeTo\",\"type\":\"address\"}],\"name\":\"setFeeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeToSetter\",\"type\":\"address\"}],\"name\":\"setFeeToSetter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/TakaFactory.sol\":\"TakaFactory\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/TakaFactory.sol\":{\"keccak256\":\"0x096fad0c054f638e70779e89196edcc754774c981ec684f755e49adfeefc2e64\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6d4c936a045e8370f8da151a072b7b2031fc11e1c9f384a0bc6e844a567e3489\",\"dweb:/ipfs/Qme1PxLVi3uMNYMWWPuLqZpB2HP9U8SAq3fqBupwj4aT5U\"]},\"project:/contracts/TakaLP.sol\":{\"keccak256\":\"0x486018efec6e0c43cdd096ad0fb6bd663f221671feecb9abf99e0c65d0b8587c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c99cd262c49ed4d19ec7fac83a09572e028ec63741abc15289c5846c8a429595\",\"dweb:/ipfs/Qmeb6RKKtqsjXt5pC4TgC3wKKWUdu2GS8aFm6b6Xk8JFqb\"]},\"project:/contracts/TakaPair.sol\":{\"keccak256\":\"0xec742d1264bdab842b98b6b85c0d89d2529a4e497931f9b43832efd6c2521845\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e4b72927997016dc5c2241cac416e1926496530d95183e4390b33dc90f250551\",\"dweb:/ipfs/QmVJorpzVNJkQCsWq7ti87pp9mE8LkPemT9CDALXDuNnxV\"]},\"project:/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xf183e9cfa49e5d04d030bee336302676913a4cb9d377ea5517a014c83055dd26\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77197f0e0e82b11fbce1337c2243b675bb17b585223695285fef0d8cc63f028d\",\"dweb:/ipfs/QmciLPSJMEEJtc1SECcKi4dkTP3mb8siwqbCaVbRzqu1ek\"]},\"project:/contracts/interfaces/ITakaCallee.sol\":{\"keccak256\":\"0xf0035dcf1e982a4fdc4933c7269399010519217641dc3e95d73f2d0a14675c8a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d825bfa6ccc86870fc57cc6304ecb1b85dae6c33103fb07703421f138b6a408b\",\"dweb:/ipfs/QmVjGbR8ePbRQrrPhGbvZk97pqtH2Ee479P73YdzncCF2D\"]},\"project:/contracts/interfaces/ITakaFactory.sol\":{\"keccak256\":\"0x04116febdfc24d0c10908b2295380cca17b20b91534a1c3fbaea4c7164accecc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4f49de1fb9fe797116ac659c5b9d88b880138d269ebebb61a623f7083d11a2ce\",\"dweb:/ipfs/QmTgLEDWC4YAa8ZwkzhTWY2bq7qTzuEamd4nEe9A7v5pCT\"]},\"project:/contracts/interfaces/ITakaLP.sol\":{\"keccak256\":\"0x9565a97805563dd19842944fbbd30a36bb48b1e74fc2c36dfd0a20ad9e7ebf3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c33c0019b3a16650b6b56101d00b3147b7a48cf625903fb929229d2cdafda689\",\"dweb:/ipfs/QmVqayFgthxq7XPp1sMUGQBgvk2ps8o7LbrH4ZtfoxyvZC\"]},\"project:/contracts/interfaces/ITakaPair.sol\":{\"keccak256\":\"0x2e42d1c93984c366dda5509e06aa64f955bed3c304b98d82111a21ab867c62f8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://02c8e3d3bbd87bb2196e0ee922fb5ba8df4640e20a087c9ad0900f9752064fea\",\"dweb:/ipfs/QmXRrKQ34ATRwitjwmukDSDB3EEYvp448BJxDhbcYmiZAE\"]},\"project:/contracts/libraries/Math.sol\":{\"keccak256\":\"0x9a2a32e0043be64cbd1b792025ad7bd8679b3b33a7b379cf4e90d801b40c7881\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://71a7dc399187da03a1d3b77e1cc67b40bb6bcbc104217b0c5d04848b53857276\",\"dweb:/ipfs/Qmcqe2yjs9okdKACscUsAUtBijpfiRE5b4FuT3TTr59N6D\"]},\"project:/contracts/libraries/SafeMath.sol\":{\"keccak256\":\"0x190ac2eeaa4397a8ffe1764ea27be36a3955c94470a20ee07b1e815f353f878b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b62d4c42a0da76e418fb74555dc477b1a1db514c41dba41034bd0666e0f58212\",\"dweb:/ipfs/QmRQ1VxBRMwwXrvbFanVFw4FQWEM2BugqA9K8dz9NU8tnx\"]},\"project:/contracts/libraries/UQ112x112.sol\":{\"keccak256\":\"0x94f2a3af50d6404b39510b9a1eec3efe653a784ffd810880733f1166f238e2a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://398bcc04d94cbe90cd6c1aecf09301fcd646184418604a433663dcfde7989d58\",\"dweb:/ipfs/QmcUsZucHTzDYQJwK9dXHoJnWHQcTwvbF2AH1GHNRUZ3M1\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50604051620051ab380380620051ab833981810160405281019061003491906100de565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061010b565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100ab82610080565b9050919050565b6100bb816100a0565b81146100c657600080fd5b50565b6000815190506100d8816100b2565b92915050565b6000602082840312156100f4576100f361007b565b5b6000610102848285016100c9565b91505092915050565b615090806200011b6000396000f3fe60806040523480156200001157600080fd5b5060043610620000945760003560e01c8063a2e74af61162000063578063a2e74af61462000135578063c9c653961462000155578063e6a43905146200018b578063f46901ed14620001c15762000094565b8063017e7e581462000099578063094b741514620000bb5780631e3dd18b14620000dd578063574f2ba31462000113575b600080fd5b620000a3620001e1565b604051620000b2919062000a1c565b60405180910390f35b620000c562000205565b604051620000d4919062000a1c565b60405180910390f35b620000fb6004803603810190620000f5919062000a79565b6200022b565b6040516200010a919062000a1c565b60405180910390f35b6200011d6200026b565b6040516200012c919062000abc565b60405180910390f35b6200015360048036038101906200014d919062000b0a565b62000278565b005b6200017360048036038101906200016d919062000b3c565b6200034f565b60405162000182919062000a1c565b60405180910390f35b620001a96004803603810190620001a3919062000b3c565b620008b1565b604051620001b8919062000a1c565b60405180910390f35b620001df6004803603810190620001d9919062000b0a565b620008f3565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600381815481106200023c57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600380549050905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146200030b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620003029062000be4565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415620003c3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620003ba9062000c56565b60405180910390fd5b6000808373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16106200040257838562000405565b84845b91509150600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156200047c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620004739062000cc8565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146200058a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620005819062000d3a565b60405180910390fd5b6000604051806020016200059e90620009c9565b6020820181038252601f19601f82011660405250905060008383604051602001620005cb92919062000dac565b604051602081830303815290604052805190602001209050808251602084016000f594508473ffffffffffffffffffffffffffffffffffffffff1663485cc95585856040518363ffffffff1660e01b81526004016200062c92919062000ddc565b600060405180830381600087803b1580156200064757600080fd5b505af11580156200065c573d6000803e3d6000fd5b5050505084600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555084600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506003859080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f0d3648bd0f6ba80134a33ba9275ac585d9d315f0ad8355cddefde31afa28d0e9876003805490506040516200089f92919062000e09565b60405180910390a35050505092915050565b60026020528160005260406000206020528060005260406000206000915091509054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161462000986576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200097d9062000be4565b60405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6142248062000e3783390190565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062000a0482620009d7565b9050919050565b62000a1681620009f7565b82525050565b600060208201905062000a33600083018462000a0b565b92915050565b600080fd5b6000819050919050565b62000a538162000a3e565b811462000a5f57600080fd5b50565b60008135905062000a738162000a48565b92915050565b60006020828403121562000a925762000a9162000a39565b5b600062000aa28482850162000a62565b91505092915050565b62000ab68162000a3e565b82525050565b600060208201905062000ad3600083018462000aab565b92915050565b62000ae481620009f7565b811462000af057600080fd5b50565b60008135905062000b048162000ad9565b92915050565b60006020828403121562000b235762000b2262000a39565b5b600062000b338482850162000af3565b91505092915050565b6000806040838503121562000b565762000b5562000a39565b5b600062000b668582860162000af3565b925050602062000b798582860162000af3565b9150509250929050565b600082825260208201905092915050565b7f54616b613a20464f5242494444454e0000000000000000000000000000000000600082015250565b600062000bcc600f8362000b83565b915062000bd98262000b94565b602082019050919050565b6000602082019050818103600083015262000bff8162000bbd565b9050919050565b7f54616b613a204944454e544943414c5f41444452455353455300000000000000600082015250565b600062000c3e60198362000b83565b915062000c4b8262000c06565b602082019050919050565b6000602082019050818103600083015262000c718162000c2f565b9050919050565b7f54616b613a205a45524f5f414444524553530000000000000000000000000000600082015250565b600062000cb060128362000b83565b915062000cbd8262000c78565b602082019050919050565b6000602082019050818103600083015262000ce38162000ca1565b9050919050565b7f54616b613a20504149525f455849535453000000000000000000000000000000600082015250565b600062000d2260118362000b83565b915062000d2f8262000cea565b602082019050919050565b6000602082019050818103600083015262000d558162000d13565b9050919050565b60008160601b9050919050565b600062000d768262000d5c565b9050919050565b600062000d8a8262000d69565b9050919050565b62000da662000da082620009f7565b62000d7d565b82525050565b600062000dba828562000d91565b60148201915062000dcc828462000d91565b6014820191508190509392505050565b600060408201905062000df3600083018562000a0b565b62000e02602083018462000a0b565b9392505050565b600060408201905062000e20600083018562000a0b565b62000e2f602083018462000aab565b939250505056fe60806040526001600c553480156200001657600080fd5b5060004690507f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6040518060400160405280600581526020017f54616b6120000000000000000000000000000000000000000000000000000000815250805190602001206040518060400160405280600181526020017f3100000000000000000000000000000000000000000000000000000000000000815250805190602001208330604051602001620000cf959493929190620001ae565b604051602081830303815290604052805190602001206003819055505033600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506200020b565b6000819050919050565b620001488162000133565b82525050565b6000819050919050565b62000163816200014e565b82525050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001968262000169565b9050919050565b620001a88162000189565b82525050565b600060a082019050620001c560008301886200013d565b620001d460208301876200013d565b620001e360408301866200013d565b620001f2606083018562000158565b6200020160808301846200019d565b9695505050505050565b614009806200021b6000396000f3fe608060405234801561001057600080fd5b50600436106101a95760003560e01c80636a627842116100f9578063b486ae4b11610097578063c45a015511610071578063c45a0155146104db578063d505accf146104f9578063dd62ed3e14610515578063fff6cae914610545576101a9565b8063b486ae4b14610483578063ba9a7a56146104a1578063bc25cf77146104bf576101a9565b80637ecebe00116100d35780637ecebe00146103d457806389afcb441461040457806395d89b4114610435578063a9059cbb14610453576101a9565b80636a6278421461035657806370a08231146103865780637464fc3d146103b6576101a9565b806323b872dd11610166578063313ce56711610140578063313ce567146102e05780633644e515146102fe578063485cc9551461031c5780635f64b55b14610338576101a9565b806323b872dd1461027457806326fbad49146102a457806330adf81f146102c2576101a9565b8063022c0d9f146101ae57806306fdde03146101ca5780630902f1ac146101e8578063095ea7b3146102085780630fc63d101461023857806318160ddd14610256575b600080fd5b6101c860048036038101906101c39190612d5b565b61054f565b005b6101d2610ba1565b6040516101df9190612e7c565b60405180910390f35b6101f0610bda565b6040516101ff93929190612ee6565b60405180910390f35b610222600480360381019061021d9190612f1d565b610c37565b60405161022f9190612f78565b60405180910390f35b610240610c4e565b60405161024d9190612fa2565b60405180910390f35b61025e610c74565b60405161026b9190612fcc565b60405180910390f35b61028e60048036038101906102899190612fe7565b610c7a565b60405161029b9190612f78565b60405180910390f35b6102ac610e45565b6040516102b99190612fcc565b60405180910390f35b6102ca610e4b565b6040516102d79190613053565b60405180910390f35b6102e8610e72565b6040516102f5919061308a565b60405180910390f35b610306610e77565b6040516103139190613053565b60405180910390f35b610336600480360381019061033191906130a5565b610e7d565b005b610340610f93565b60405161034d9190612fa2565b60405180910390f35b610370600480360381019061036b91906130e5565b610fb9565b60405161037d9190612fcc565b60405180910390f35b6103a0600480360381019061039b91906130e5565b6113a3565b6040516103ad9190612fcc565b60405180910390f35b6103be6113bb565b6040516103cb9190612fcc565b60405180910390f35b6103ee60048036038101906103e991906130e5565b6113c1565b6040516103fb9190612fcc565b60405180910390f35b61041e600480360381019061041991906130e5565b6113d9565b60405161042c929190613112565b60405180910390f35b61043d611883565b60405161044a9190612e7c565b60405180910390f35b61046d60048036038101906104689190612f1d565b6118bc565b60405161047a9190612f78565b60405180910390f35b61048b6118d3565b6040516104989190612fcc565b60405180910390f35b6104a96118d9565b6040516104b69190612fcc565b60405180910390f35b6104d960048036038101906104d491906130e5565b6118df565b005b6104e3611b0b565b6040516104f09190612fa2565b60405180910390f35b610513600480360381019061050e9190613193565b611b31565b005b61052f600480360381019061052a91906130a5565b611d59565b60405161053c9190612fcc565b60405180910390f35b61054d611d7e565b005b6001600c5414610594576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058b90613281565b60405180910390fd5b6000600c8190555060008511806105ab5750600084115b6105ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e1906132ed565b60405180910390fd5b6000806105f5610bda565b5091509150816dffffffffffffffffffffffffffff16871080156106285750806dffffffffffffffffffffffffffff1686105b610667576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161065e90613359565b60405180910390fd5b6000806000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508173ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff161415801561072057508073ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff1614155b61075f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610756906133c5565b60405180910390fd5b60008b111561077457610773828a8d611f4f565b5b60008a111561078957610788818a8c611f4f565b5b6000888890501115610809578873ffffffffffffffffffffffffffffffffffffffff1663afce41a7338d8d8c8c6040518663ffffffff1660e01b81526004016107d6959493929190613432565b600060405180830381600087803b1580156107f057600080fd5b505af1158015610804573d6000803e3d6000fd5b505050505b8173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016108429190612fa2565b602060405180830381865afa15801561085f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108839190613495565b93508073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016108be9190612fa2565b602060405180830381865afa1580156108db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108ff9190613495565b92505050600089856dffffffffffffffffffffffffffff1661092191906134f1565b831161092e576000610956565b89856dffffffffffffffffffffffffffff1661094a91906134f1565b8361095591906134f1565b5b9050600089856dffffffffffffffffffffffffffff1661097691906134f1565b83116109835760006109ab565b89856dffffffffffffffffffffffffffff1661099f91906134f1565b836109aa91906134f1565b5b905060008211806109bc5750600081115b6109fb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109f290613571565b60405180910390fd5b6000610a37610a146003856120d990919063ffffffff16565b610a296103e8886120d990919063ffffffff16565b61214690919063ffffffff16565b90506000610a75610a526003856120d990919063ffffffff16565b610a676103e8886120d990919063ffffffff16565b61214690919063ffffffff16565b9050610abf620f4240610ab1896dffffffffffffffffffffffffffff168b6dffffffffffffffffffffffffffff166120d990919063ffffffff16565b6120d990919063ffffffff16565b610ad282846120d990919063ffffffff16565b1015610b13576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b0a906135dd565b60405180910390fd5b5050610b218484888861219f565b8873ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fd78ad95fa46c994b6551d0da85fc275fe613ce37657fb8d5e3d130840159d82284848f8f604051610b8494939291906135fd565b60405180910390a35050505050506001600c819055505050505050565b6040518060400160405280600581526020017f54616b612000000000000000000000000000000000000000000000000000000081525081565b6000806000600860009054906101000a90046dffffffffffffffffffffffffffff1692506008600e9054906101000a90046dffffffffffffffffffffffffffff1691506008601c9054906101000a900463ffffffff169050909192565b6000610c44338484612493565b6001905092915050565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60005481565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414610e2f57610dae82600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461214690919063ffffffff16565b600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b610e3a84848461257e565b600190509392505050565b600a5481565b7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c960001b81565b601281565b60035481565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610f0d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f049061368e565b60405180910390fd5b81600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006001600c5414611000576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ff790613281565b60405180910390fd5b6000600c81905550600080611013610bda565b50915091506000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016110759190612fa2565b602060405180830381865afa158015611092573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110b69190613495565b90506000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016111159190612fa2565b602060405180830381865afa158015611132573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111569190613495565b9050600061117d856dffffffffffffffffffffffffffff168461214690919063ffffffff16565b905060006111a4856dffffffffffffffffffffffffffff168461214690919063ffffffff16565b905060006111b28787612712565b90506000805490506000811415611206576111f26103e86111e46111df86886120d990919063ffffffff16565b6128de565b61214690919063ffffffff16565b985061120160006103e8612958565b61126d565b61126a886dffffffffffffffffffffffffffff1661122d83876120d990919063ffffffff16565b61123791906136dd565b886dffffffffffffffffffffffffffff1661125b84876120d990919063ffffffff16565b61126591906136dd565b612a72565b98505b600089116112b0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112a790613780565b60405180910390fd5b6112ba8a8a612958565b6112c686868a8a61219f565b811561133e576113376008600e9054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff16600860009054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff166120d990919063ffffffff16565b600b819055505b3373ffffffffffffffffffffffffffffffffffffffff167f4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f8585604051611386929190613112565b60405180910390a250505050505050506001600c81905550919050565b60016020528060005260406000206000915090505481565b600b5481565b60046020528060005260406000206000915090505481565b6000806001600c5414611421576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161141890613281565b60405180910390fd5b6000600c81905550600080611434610bda565b50915091506000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008273ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016114c29190612fa2565b602060405180830381865afa1580156114df573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115039190613495565b905060008273ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016115409190612fa2565b602060405180830381865afa15801561155d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115819190613495565b90506000600160003073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060006115d38888612712565b9050600080549050806115ef86856120d990919063ffffffff16565b6115f991906136dd565b9a508061160f85856120d990919063ffffffff16565b61161991906136dd565b995060008b11801561162b575060008a115b61166a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161166190613812565b60405180910390fd5b6116743084612a8b565b61167f878d8d611f4f565b61168a868d8c611f4f565b8673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016116c39190612fa2565b602060405180830381865afa1580156116e0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117049190613495565b94508573ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161173f9190612fa2565b602060405180830381865afa15801561175c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117809190613495565b935061178e85858b8b61219f565b8115611806576117ff6008600e9054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff16600860009054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff166120d990919063ffffffff16565b600b819055505b8b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fdccd412f0b1252819cb1fd330b93224ca42612892bb3f4f789976e6d819364968d8d604051611865929190613112565b60405180910390a35050505050505050506001600c81905550915091565b6040518060400160405280600481526020017f554e492d0000000000000000000000000000000000000000000000000000000081525081565b60006118c933848461257e565b6001905092915050565b60095481565b6103e881565b6001600c5414611924576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161191b90613281565b60405180910390fd5b6000600c819055506000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050611a3c8284611a37600860009054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016119e89190612fa2565b602060405180830381865afa158015611a05573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a299190613495565b61214690919063ffffffff16565b611f4f565b611afe8184611af96008600e9054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401611aaa9190612fa2565b602060405180830381865afa158015611ac7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611aeb9190613495565b61214690919063ffffffff16565b611f4f565b50506001600c8190555050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b42841015611b74576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b6b9061387e565b60405180910390fd5b60006003547f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c960001b898989600460008e73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815480929190611bf09061389e565b919050558a604051602001611c0a969594939291906138e7565b60405160208183030381529060405280519060200120604051602001611c319291906139c0565b604051602081830303815290604052805190602001209050600060018286868660405160008152602001604052604051611c6e94939291906139f7565b6020604051602081039080840390855afa158015611c90573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614158015611d0457508873ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b611d43576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d3a90613a88565b60405180910390fd5b611d4e898989612493565b505050505050505050565b6002602052816000526040600020602052806000526040600020600091509150505481565b6001600c5414611dc3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611dba90613281565b60405180910390fd5b6000600c81905550611f45600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401611e299190612fa2565b602060405180830381865afa158015611e46573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e6a9190613495565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401611ec59190612fa2565b602060405180830381865afa158015611ee2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f069190613495565b600860009054906101000a90046dffffffffffffffffffffffffffff166008600e9054906101000a90046dffffffffffffffffffffffffffff1661219f565b6001600c81905550565b6000808473ffffffffffffffffffffffffffffffffffffffff166040518060400160405280601981526020017f7472616e7366657228616464726573732c75696e743235362900000000000000815250805190602001208585604051602401611fb9929190613aa8565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516120239190613b18565b6000604051808303816000865af19150503d8060008114612060576040519150601f19603f3d011682016040523d82523d6000602084013e612065565b606091505b509150915081801561209357506000815114806120925750808060200190518101906120919190613b5b565b5b5b6120d2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016120c990613bd4565b60405180910390fd5b5050505050565b6000808214806121015750828283856120f29190613bf4565b9250826120ff91906136dd565b145b612140576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161213790613c9a565b60405180910390fd5b92915050565b600082828461215591906134f1565b9150811115612199576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161219090613d06565b60405180910390fd5b92915050565b6dffffffffffffffffffffffffffff801684111580156121cf57506dffffffffffffffffffffffffffff80168311155b61220e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161220590613d72565b60405180910390fd5b6000640100000000426122219190613d92565b905060006008601c9054906101000a900463ffffffff16826122439190613dc3565b905060008163ffffffff1611801561226c57506000846dffffffffffffffffffffffffffff1614155b801561228957506000836dffffffffffffffffffffffffffff1614155b1561238f578063ffffffff166122ce856122a286612ba5565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16612bd990919063ffffffff16565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166122f69190613bf4565b600960008282546123079190613df7565b925050819055508063ffffffff1661234e8461232287612ba5565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16612bd990919063ffffffff16565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166123769190613bf4565b600a60008282546123879190613df7565b925050819055505b85600860006101000a8154816dffffffffffffffffffffffffffff02191690836dffffffffffffffffffffffffffff160217905550846008600e6101000a8154816dffffffffffffffffffffffffffff02191690836dffffffffffffffffffffffffffff160217905550816008601c6101000a81548163ffffffff021916908363ffffffff1602179055507f1c411e9a96e071241c2f21f7726b17ae89e3cab4c78be50e062b03a9fffbbad1600860009054906101000a90046dffffffffffffffffffffffffffff166008600e9054906101000a90046dffffffffffffffffffffffffffff16604051612483929190613e4d565b60405180910390a1505050505050565b80600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516125719190612fcc565b60405180910390a3505050565b6125d081600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461214690919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061266581600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612bff90919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516127059190612fcc565b60405180910390a3505050565b600080600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663017e7e586040518163ffffffff1660e01b8152600401602060405180830381865afa158015612782573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127a69190613e8b565b90506000600b549050600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16146128c457600081146128bf576000612828612823866dffffffffffffffffffffffffffff16886dffffffffffffffffffffffffffff166120d990919063ffffffff16565b6128de565b90506000612835836128de565b9050808211156128bc576000612868612857838561214690919063ffffffff16565b6000546120d990919063ffffffff16565b90506000612892836128846005876120d990919063ffffffff16565b612bff90919063ffffffff16565b9050600081836128a291906136dd565b905060008111156128b8576128b78782612958565b5b5050505b50505b6128d6565b600081146128d5576000600b819055505b5b505092915050565b6000600382111561294557819050600060016002846128fd91906136dd565b6129079190613df7565b90505b8181101561293f57809150600281828561292491906136dd565b61292e9190613df7565b61293891906136dd565b905061290a565b50612953565b6000821461295257600190505b5b919050565b61296d81600054612bff90919063ffffffff16565b6000819055506129c581600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612bff90919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051612a669190612fcc565b60405180910390a35050565b6000818310612a815781612a83565b825b905092915050565b612add81600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461214690919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550612b358160005461214690919063ffffffff16565b600081905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051612b999190612fcc565b60405180910390a35050565b60006e010000000000000000000000000000826dffffffffffffffffffffffffffff16612bd29190613ee0565b9050919050565b6000816dffffffffffffffffffffffffffff1683612bf79190613f36565b905092915050565b6000828284612c0e9190613df7565b9150811015612c52576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612c4990613fb3565b60405180910390fd5b92915050565b600080fd5b600080fd5b6000819050919050565b612c7581612c62565b8114612c8057600080fd5b50565b600081359050612c9281612c6c565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000612cc382612c98565b9050919050565b612cd381612cb8565b8114612cde57600080fd5b50565b600081359050612cf081612cca565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f840112612d1b57612d1a612cf6565b5b8235905067ffffffffffffffff811115612d3857612d37612cfb565b5b602083019150836001820283011115612d5457612d53612d00565b5b9250929050565b600080600080600060808688031215612d7757612d76612c58565b5b6000612d8588828901612c83565b9550506020612d9688828901612c83565b9450506040612da788828901612ce1565b935050606086013567ffffffffffffffff811115612dc857612dc7612c5d565b5b612dd488828901612d05565b92509250509295509295909350565b600081519050919050565b600082825260208201905092915050565b60005b83811015612e1d578082015181840152602081019050612e02565b83811115612e2c576000848401525b50505050565b6000601f19601f8301169050919050565b6000612e4e82612de3565b612e588185612dee565b9350612e68818560208601612dff565b612e7181612e32565b840191505092915050565b60006020820190508181036000830152612e968184612e43565b905092915050565b60006dffffffffffffffffffffffffffff82169050919050565b612ec181612e9e565b82525050565b600063ffffffff82169050919050565b612ee081612ec7565b82525050565b6000606082019050612efb6000830186612eb8565b612f086020830185612eb8565b612f156040830184612ed7565b949350505050565b60008060408385031215612f3457612f33612c58565b5b6000612f4285828601612ce1565b9250506020612f5385828601612c83565b9150509250929050565b60008115159050919050565b612f7281612f5d565b82525050565b6000602082019050612f8d6000830184612f69565b92915050565b612f9c81612cb8565b82525050565b6000602082019050612fb76000830184612f93565b92915050565b612fc681612c62565b82525050565b6000602082019050612fe16000830184612fbd565b92915050565b60008060006060848603121561300057612fff612c58565b5b600061300e86828701612ce1565b935050602061301f86828701612ce1565b925050604061303086828701612c83565b9150509250925092565b6000819050919050565b61304d8161303a565b82525050565b60006020820190506130686000830184613044565b92915050565b600060ff82169050919050565b6130848161306e565b82525050565b600060208201905061309f600083018461307b565b92915050565b600080604083850312156130bc576130bb612c58565b5b60006130ca85828601612ce1565b92505060206130db85828601612ce1565b9150509250929050565b6000602082840312156130fb576130fa612c58565b5b600061310984828501612ce1565b91505092915050565b60006040820190506131276000830185612fbd565b6131346020830184612fbd565b9392505050565b6131448161306e565b811461314f57600080fd5b50565b6000813590506131618161313b565b92915050565b6131708161303a565b811461317b57600080fd5b50565b60008135905061318d81613167565b92915050565b600080600080600080600060e0888a0312156131b2576131b1612c58565b5b60006131c08a828b01612ce1565b97505060206131d18a828b01612ce1565b96505060406131e28a828b01612c83565b95505060606131f38a828b01612c83565b94505060806132048a828b01613152565b93505060a06132158a828b0161317e565b92505060c06132268a828b0161317e565b91505092959891949750929550565b7f54616b613a204c4f434b45440000000000000000000000000000000000000000600082015250565b600061326b600c83612dee565b915061327682613235565b602082019050919050565b6000602082019050818103600083015261329a8161325e565b9050919050565b7f54616b613a20494e53554646494349454e545f4f55545055545f414d4f554e54600082015250565b60006132d7602083612dee565b91506132e2826132a1565b602082019050919050565b60006020820190508181036000830152613306816132ca565b9050919050565b7f54616b613a20494e53554646494349454e545f4c495155494449545900000000600082015250565b6000613343601c83612dee565b915061334e8261330d565b602082019050919050565b6000602082019050818103600083015261337281613336565b9050919050565b7f54616b613a20494e56414c49445f544f00000000000000000000000000000000600082015250565b60006133af601083612dee565b91506133ba82613379565b602082019050919050565b600060208201905081810360008301526133de816133a2565b9050919050565b600082825260208201905092915050565b82818337600083830152505050565b600061341183856133e5565b935061341e8385846133f6565b61342783612e32565b840190509392505050565b60006080820190506134476000830188612f93565b6134546020830187612fbd565b6134616040830186612fbd565b8181036060830152613474818486613405565b90509695505050505050565b60008151905061348f81612c6c565b92915050565b6000602082840312156134ab576134aa612c58565b5b60006134b984828501613480565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006134fc82612c62565b915061350783612c62565b92508282101561351a576135196134c2565b5b828203905092915050565b7f54616b613a20494e53554646494349454e545f494e5055545f414d4f554e5400600082015250565b600061355b601f83612dee565b915061356682613525565b602082019050919050565b6000602082019050818103600083015261358a8161354e565b9050919050565b7f54616b613a204b00000000000000000000000000000000000000000000000000600082015250565b60006135c7600783612dee565b91506135d282613591565b602082019050919050565b600060208201905081810360008301526135f6816135ba565b9050919050565b60006080820190506136126000830187612fbd565b61361f6020830186612fbd565b61362c6040830185612fbd565b6136396060830184612fbd565b95945050505050565b7f54616b613a20464f5242494444454e0000000000000000000000000000000000600082015250565b6000613678600f83612dee565b915061368382613642565b602082019050919050565b600060208201905081810360008301526136a78161366b565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006136e882612c62565b91506136f383612c62565b925082613703576137026136ae565b5b828204905092915050565b7f54616b613a20494e53554646494349454e545f4c49515549444954595f4d494e60008201527f5445440000000000000000000000000000000000000000000000000000000000602082015250565b600061376a602383612dee565b91506137758261370e565b604082019050919050565b600060208201905081810360008301526137998161375d565b9050919050565b7f54616b613a20494e53554646494349454e545f4c49515549444954595f42555260008201527f4e45440000000000000000000000000000000000000000000000000000000000602082015250565b60006137fc602383612dee565b9150613807826137a0565b604082019050919050565b6000602082019050818103600083015261382b816137ef565b9050919050565b7f54616b613a204558504952454400000000000000000000000000000000000000600082015250565b6000613868600d83612dee565b915061387382613832565b602082019050919050565b600060208201905081810360008301526138978161385b565b9050919050565b60006138a982612c62565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156138dc576138db6134c2565b5b600182019050919050565b600060c0820190506138fc6000830189613044565b6139096020830188612f93565b6139166040830187612f93565b6139236060830186612fbd565b6139306080830185612fbd565b61393d60a0830184612fbd565b979650505050505050565b600081905092915050565b7f1901000000000000000000000000000000000000000000000000000000000000600082015250565b6000613989600283613948565b915061399482613953565b600282019050919050565b6000819050919050565b6139ba6139b58261303a565b61399f565b82525050565b60006139cb8261397c565b91506139d782856139a9565b6020820191506139e782846139a9565b6020820191508190509392505050565b6000608082019050613a0c6000830187613044565b613a19602083018661307b565b613a266040830185613044565b613a336060830184613044565b95945050505050565b7f54616b613a20494e56414c49445f5349474e4154555245000000000000000000600082015250565b6000613a72601783612dee565b9150613a7d82613a3c565b602082019050919050565b60006020820190508181036000830152613aa181613a65565b9050919050565b6000604082019050613abd6000830185612f93565b613aca6020830184612fbd565b9392505050565b600081519050919050565b600081905092915050565b6000613af282613ad1565b613afc8185613adc565b9350613b0c818560208601612dff565b80840191505092915050565b6000613b248284613ae7565b915081905092915050565b613b3881612f5d565b8114613b4357600080fd5b50565b600081519050613b5581613b2f565b92915050565b600060208284031215613b7157613b70612c58565b5b6000613b7f84828501613b46565b91505092915050565b7f54616b613a205452414e534645525f4641494c45440000000000000000000000600082015250565b6000613bbe601583612dee565b9150613bc982613b88565b602082019050919050565b60006020820190508181036000830152613bed81613bb1565b9050919050565b6000613bff82612c62565b9150613c0a83612c62565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615613c4357613c426134c2565b5b828202905092915050565b7f64732d6d6174682d6d756c2d6f766572666c6f77000000000000000000000000600082015250565b6000613c84601483612dee565b9150613c8f82613c4e565b602082019050919050565b60006020820190508181036000830152613cb381613c77565b9050919050565b7f64732d6d6174682d7375622d756e646572666c6f770000000000000000000000600082015250565b6000613cf0601583612dee565b9150613cfb82613cba565b602082019050919050565b60006020820190508181036000830152613d1f81613ce3565b9050919050565b7f54616b613a204f564552464c4f57000000000000000000000000000000000000600082015250565b6000613d5c600e83612dee565b9150613d6782613d26565b602082019050919050565b60006020820190508181036000830152613d8b81613d4f565b9050919050565b6000613d9d82612c62565b9150613da883612c62565b925082613db857613db76136ae565b5b828206905092915050565b6000613dce82612ec7565b9150613dd983612ec7565b925082821015613dec57613deb6134c2565b5b828203905092915050565b6000613e0282612c62565b9150613e0d83612c62565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115613e4257613e416134c2565b5b828201905092915050565b6000604082019050613e626000830185612eb8565b613e6f6020830184612eb8565b9392505050565b600081519050613e8581612cca565b92915050565b600060208284031215613ea157613ea0612c58565b5b6000613eaf84828501613e76565b91505092915050565b60007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff82169050919050565b6000613eeb82613eb8565b9150613ef683613eb8565b9250817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615613f2b57613f2a6134c2565b5b828202905092915050565b6000613f4182613eb8565b9150613f4c83613eb8565b925082613f5c57613f5b6136ae565b5b828204905092915050565b7f64732d6d6174682d6164642d6f766572666c6f77000000000000000000000000600082015250565b6000613f9d601483612dee565b9150613fa882613f67565b602082019050919050565b60006020820190508181036000830152613fcc81613f90565b905091905056fea26469706673582212204641aa7662ecfd390ecbdc501af0fa1f9d2571c6fe7e8e14ab6425b24d964b3f64736f6c634300080b0033a2646970667358221220caa3b9707dafcbfd770203c9b3762968554fed40524dd1c744cb791caec8bea564736f6c634300080b0033",
  "deployedBytecode": "0x60806040523480156200001157600080fd5b5060043610620000945760003560e01c8063a2e74af61162000063578063a2e74af61462000135578063c9c653961462000155578063e6a43905146200018b578063f46901ed14620001c15762000094565b8063017e7e581462000099578063094b741514620000bb5780631e3dd18b14620000dd578063574f2ba31462000113575b600080fd5b620000a3620001e1565b604051620000b2919062000a1c565b60405180910390f35b620000c562000205565b604051620000d4919062000a1c565b60405180910390f35b620000fb6004803603810190620000f5919062000a79565b6200022b565b6040516200010a919062000a1c565b60405180910390f35b6200011d6200026b565b6040516200012c919062000abc565b60405180910390f35b6200015360048036038101906200014d919062000b0a565b62000278565b005b6200017360048036038101906200016d919062000b3c565b6200034f565b60405162000182919062000a1c565b60405180910390f35b620001a96004803603810190620001a3919062000b3c565b620008b1565b604051620001b8919062000a1c565b60405180910390f35b620001df6004803603810190620001d9919062000b0a565b620008f3565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600381815481106200023c57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600380549050905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146200030b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620003029062000be4565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415620003c3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620003ba9062000c56565b60405180910390fd5b6000808373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16106200040257838562000405565b84845b91509150600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156200047c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620004739062000cc8565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146200058a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620005819062000d3a565b60405180910390fd5b6000604051806020016200059e90620009c9565b6020820181038252601f19601f82011660405250905060008383604051602001620005cb92919062000dac565b604051602081830303815290604052805190602001209050808251602084016000f594508473ffffffffffffffffffffffffffffffffffffffff1663485cc95585856040518363ffffffff1660e01b81526004016200062c92919062000ddc565b600060405180830381600087803b1580156200064757600080fd5b505af11580156200065c573d6000803e3d6000fd5b5050505084600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555084600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506003859080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f0d3648bd0f6ba80134a33ba9275ac585d9d315f0ad8355cddefde31afa28d0e9876003805490506040516200089f92919062000e09565b60405180910390a35050505092915050565b60026020528160005260406000206020528060005260406000206000915091509054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161462000986576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200097d9062000be4565b60405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6142248062000e3783390190565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062000a0482620009d7565b9050919050565b62000a1681620009f7565b82525050565b600060208201905062000a33600083018462000a0b565b92915050565b600080fd5b6000819050919050565b62000a538162000a3e565b811462000a5f57600080fd5b50565b60008135905062000a738162000a48565b92915050565b60006020828403121562000a925762000a9162000a39565b5b600062000aa28482850162000a62565b91505092915050565b62000ab68162000a3e565b82525050565b600060208201905062000ad3600083018462000aab565b92915050565b62000ae481620009f7565b811462000af057600080fd5b50565b60008135905062000b048162000ad9565b92915050565b60006020828403121562000b235762000b2262000a39565b5b600062000b338482850162000af3565b91505092915050565b6000806040838503121562000b565762000b5562000a39565b5b600062000b668582860162000af3565b925050602062000b798582860162000af3565b9150509250929050565b600082825260208201905092915050565b7f54616b613a20464f5242494444454e0000000000000000000000000000000000600082015250565b600062000bcc600f8362000b83565b915062000bd98262000b94565b602082019050919050565b6000602082019050818103600083015262000bff8162000bbd565b9050919050565b7f54616b613a204944454e544943414c5f41444452455353455300000000000000600082015250565b600062000c3e60198362000b83565b915062000c4b8262000c06565b602082019050919050565b6000602082019050818103600083015262000c718162000c2f565b9050919050565b7f54616b613a205a45524f5f414444524553530000000000000000000000000000600082015250565b600062000cb060128362000b83565b915062000cbd8262000c78565b602082019050919050565b6000602082019050818103600083015262000ce38162000ca1565b9050919050565b7f54616b613a20504149525f455849535453000000000000000000000000000000600082015250565b600062000d2260118362000b83565b915062000d2f8262000cea565b602082019050919050565b6000602082019050818103600083015262000d558162000d13565b9050919050565b60008160601b9050919050565b600062000d768262000d5c565b9050919050565b600062000d8a8262000d69565b9050919050565b62000da662000da082620009f7565b62000d7d565b82525050565b600062000dba828562000d91565b60148201915062000dcc828462000d91565b6014820191508190509392505050565b600060408201905062000df3600083018562000a0b565b62000e02602083018462000a0b565b9392505050565b600060408201905062000e20600083018562000a0b565b62000e2f602083018462000aab565b939250505056fe60806040526001600c553480156200001657600080fd5b5060004690507f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6040518060400160405280600581526020017f54616b6120000000000000000000000000000000000000000000000000000000815250805190602001206040518060400160405280600181526020017f3100000000000000000000000000000000000000000000000000000000000000815250805190602001208330604051602001620000cf959493929190620001ae565b604051602081830303815290604052805190602001206003819055505033600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506200020b565b6000819050919050565b620001488162000133565b82525050565b6000819050919050565b62000163816200014e565b82525050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001968262000169565b9050919050565b620001a88162000189565b82525050565b600060a082019050620001c560008301886200013d565b620001d460208301876200013d565b620001e360408301866200013d565b620001f2606083018562000158565b6200020160808301846200019d565b9695505050505050565b614009806200021b6000396000f3fe608060405234801561001057600080fd5b50600436106101a95760003560e01c80636a627842116100f9578063b486ae4b11610097578063c45a015511610071578063c45a0155146104db578063d505accf146104f9578063dd62ed3e14610515578063fff6cae914610545576101a9565b8063b486ae4b14610483578063ba9a7a56146104a1578063bc25cf77146104bf576101a9565b80637ecebe00116100d35780637ecebe00146103d457806389afcb441461040457806395d89b4114610435578063a9059cbb14610453576101a9565b80636a6278421461035657806370a08231146103865780637464fc3d146103b6576101a9565b806323b872dd11610166578063313ce56711610140578063313ce567146102e05780633644e515146102fe578063485cc9551461031c5780635f64b55b14610338576101a9565b806323b872dd1461027457806326fbad49146102a457806330adf81f146102c2576101a9565b8063022c0d9f146101ae57806306fdde03146101ca5780630902f1ac146101e8578063095ea7b3146102085780630fc63d101461023857806318160ddd14610256575b600080fd5b6101c860048036038101906101c39190612d5b565b61054f565b005b6101d2610ba1565b6040516101df9190612e7c565b60405180910390f35b6101f0610bda565b6040516101ff93929190612ee6565b60405180910390f35b610222600480360381019061021d9190612f1d565b610c37565b60405161022f9190612f78565b60405180910390f35b610240610c4e565b60405161024d9190612fa2565b60405180910390f35b61025e610c74565b60405161026b9190612fcc565b60405180910390f35b61028e60048036038101906102899190612fe7565b610c7a565b60405161029b9190612f78565b60405180910390f35b6102ac610e45565b6040516102b99190612fcc565b60405180910390f35b6102ca610e4b565b6040516102d79190613053565b60405180910390f35b6102e8610e72565b6040516102f5919061308a565b60405180910390f35b610306610e77565b6040516103139190613053565b60405180910390f35b610336600480360381019061033191906130a5565b610e7d565b005b610340610f93565b60405161034d9190612fa2565b60405180910390f35b610370600480360381019061036b91906130e5565b610fb9565b60405161037d9190612fcc565b60405180910390f35b6103a0600480360381019061039b91906130e5565b6113a3565b6040516103ad9190612fcc565b60405180910390f35b6103be6113bb565b6040516103cb9190612fcc565b60405180910390f35b6103ee60048036038101906103e991906130e5565b6113c1565b6040516103fb9190612fcc565b60405180910390f35b61041e600480360381019061041991906130e5565b6113d9565b60405161042c929190613112565b60405180910390f35b61043d611883565b60405161044a9190612e7c565b60405180910390f35b61046d60048036038101906104689190612f1d565b6118bc565b60405161047a9190612f78565b60405180910390f35b61048b6118d3565b6040516104989190612fcc565b60405180910390f35b6104a96118d9565b6040516104b69190612fcc565b60405180910390f35b6104d960048036038101906104d491906130e5565b6118df565b005b6104e3611b0b565b6040516104f09190612fa2565b60405180910390f35b610513600480360381019061050e9190613193565b611b31565b005b61052f600480360381019061052a91906130a5565b611d59565b60405161053c9190612fcc565b60405180910390f35b61054d611d7e565b005b6001600c5414610594576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058b90613281565b60405180910390fd5b6000600c8190555060008511806105ab5750600084115b6105ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e1906132ed565b60405180910390fd5b6000806105f5610bda565b5091509150816dffffffffffffffffffffffffffff16871080156106285750806dffffffffffffffffffffffffffff1686105b610667576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161065e90613359565b60405180910390fd5b6000806000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508173ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff161415801561072057508073ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff1614155b61075f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610756906133c5565b60405180910390fd5b60008b111561077457610773828a8d611f4f565b5b60008a111561078957610788818a8c611f4f565b5b6000888890501115610809578873ffffffffffffffffffffffffffffffffffffffff1663afce41a7338d8d8c8c6040518663ffffffff1660e01b81526004016107d6959493929190613432565b600060405180830381600087803b1580156107f057600080fd5b505af1158015610804573d6000803e3d6000fd5b505050505b8173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016108429190612fa2565b602060405180830381865afa15801561085f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108839190613495565b93508073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016108be9190612fa2565b602060405180830381865afa1580156108db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108ff9190613495565b92505050600089856dffffffffffffffffffffffffffff1661092191906134f1565b831161092e576000610956565b89856dffffffffffffffffffffffffffff1661094a91906134f1565b8361095591906134f1565b5b9050600089856dffffffffffffffffffffffffffff1661097691906134f1565b83116109835760006109ab565b89856dffffffffffffffffffffffffffff1661099f91906134f1565b836109aa91906134f1565b5b905060008211806109bc5750600081115b6109fb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109f290613571565b60405180910390fd5b6000610a37610a146003856120d990919063ffffffff16565b610a296103e8886120d990919063ffffffff16565b61214690919063ffffffff16565b90506000610a75610a526003856120d990919063ffffffff16565b610a676103e8886120d990919063ffffffff16565b61214690919063ffffffff16565b9050610abf620f4240610ab1896dffffffffffffffffffffffffffff168b6dffffffffffffffffffffffffffff166120d990919063ffffffff16565b6120d990919063ffffffff16565b610ad282846120d990919063ffffffff16565b1015610b13576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b0a906135dd565b60405180910390fd5b5050610b218484888861219f565b8873ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fd78ad95fa46c994b6551d0da85fc275fe613ce37657fb8d5e3d130840159d82284848f8f604051610b8494939291906135fd565b60405180910390a35050505050506001600c819055505050505050565b6040518060400160405280600581526020017f54616b612000000000000000000000000000000000000000000000000000000081525081565b6000806000600860009054906101000a90046dffffffffffffffffffffffffffff1692506008600e9054906101000a90046dffffffffffffffffffffffffffff1691506008601c9054906101000a900463ffffffff169050909192565b6000610c44338484612493565b6001905092915050565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60005481565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414610e2f57610dae82600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461214690919063ffffffff16565b600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b610e3a84848461257e565b600190509392505050565b600a5481565b7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c960001b81565b601281565b60035481565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610f0d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f049061368e565b60405180910390fd5b81600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006001600c5414611000576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ff790613281565b60405180910390fd5b6000600c81905550600080611013610bda565b50915091506000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016110759190612fa2565b602060405180830381865afa158015611092573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110b69190613495565b90506000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016111159190612fa2565b602060405180830381865afa158015611132573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111569190613495565b9050600061117d856dffffffffffffffffffffffffffff168461214690919063ffffffff16565b905060006111a4856dffffffffffffffffffffffffffff168461214690919063ffffffff16565b905060006111b28787612712565b90506000805490506000811415611206576111f26103e86111e46111df86886120d990919063ffffffff16565b6128de565b61214690919063ffffffff16565b985061120160006103e8612958565b61126d565b61126a886dffffffffffffffffffffffffffff1661122d83876120d990919063ffffffff16565b61123791906136dd565b886dffffffffffffffffffffffffffff1661125b84876120d990919063ffffffff16565b61126591906136dd565b612a72565b98505b600089116112b0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112a790613780565b60405180910390fd5b6112ba8a8a612958565b6112c686868a8a61219f565b811561133e576113376008600e9054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff16600860009054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff166120d990919063ffffffff16565b600b819055505b3373ffffffffffffffffffffffffffffffffffffffff167f4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f8585604051611386929190613112565b60405180910390a250505050505050506001600c81905550919050565b60016020528060005260406000206000915090505481565b600b5481565b60046020528060005260406000206000915090505481565b6000806001600c5414611421576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161141890613281565b60405180910390fd5b6000600c81905550600080611434610bda565b50915091506000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008273ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016114c29190612fa2565b602060405180830381865afa1580156114df573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115039190613495565b905060008273ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016115409190612fa2565b602060405180830381865afa15801561155d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115819190613495565b90506000600160003073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060006115d38888612712565b9050600080549050806115ef86856120d990919063ffffffff16565b6115f991906136dd565b9a508061160f85856120d990919063ffffffff16565b61161991906136dd565b995060008b11801561162b575060008a115b61166a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161166190613812565b60405180910390fd5b6116743084612a8b565b61167f878d8d611f4f565b61168a868d8c611f4f565b8673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016116c39190612fa2565b602060405180830381865afa1580156116e0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117049190613495565b94508573ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161173f9190612fa2565b602060405180830381865afa15801561175c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117809190613495565b935061178e85858b8b61219f565b8115611806576117ff6008600e9054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff16600860009054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff166120d990919063ffffffff16565b600b819055505b8b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fdccd412f0b1252819cb1fd330b93224ca42612892bb3f4f789976e6d819364968d8d604051611865929190613112565b60405180910390a35050505050505050506001600c81905550915091565b6040518060400160405280600481526020017f554e492d0000000000000000000000000000000000000000000000000000000081525081565b60006118c933848461257e565b6001905092915050565b60095481565b6103e881565b6001600c5414611924576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161191b90613281565b60405180910390fd5b6000600c819055506000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050611a3c8284611a37600860009054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016119e89190612fa2565b602060405180830381865afa158015611a05573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a299190613495565b61214690919063ffffffff16565b611f4f565b611afe8184611af96008600e9054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401611aaa9190612fa2565b602060405180830381865afa158015611ac7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611aeb9190613495565b61214690919063ffffffff16565b611f4f565b50506001600c8190555050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b42841015611b74576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b6b9061387e565b60405180910390fd5b60006003547f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c960001b898989600460008e73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815480929190611bf09061389e565b919050558a604051602001611c0a969594939291906138e7565b60405160208183030381529060405280519060200120604051602001611c319291906139c0565b604051602081830303815290604052805190602001209050600060018286868660405160008152602001604052604051611c6e94939291906139f7565b6020604051602081039080840390855afa158015611c90573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614158015611d0457508873ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b611d43576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d3a90613a88565b60405180910390fd5b611d4e898989612493565b505050505050505050565b6002602052816000526040600020602052806000526040600020600091509150505481565b6001600c5414611dc3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611dba90613281565b60405180910390fd5b6000600c81905550611f45600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401611e299190612fa2565b602060405180830381865afa158015611e46573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e6a9190613495565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401611ec59190612fa2565b602060405180830381865afa158015611ee2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f069190613495565b600860009054906101000a90046dffffffffffffffffffffffffffff166008600e9054906101000a90046dffffffffffffffffffffffffffff1661219f565b6001600c81905550565b6000808473ffffffffffffffffffffffffffffffffffffffff166040518060400160405280601981526020017f7472616e7366657228616464726573732c75696e743235362900000000000000815250805190602001208585604051602401611fb9929190613aa8565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516120239190613b18565b6000604051808303816000865af19150503d8060008114612060576040519150601f19603f3d011682016040523d82523d6000602084013e612065565b606091505b509150915081801561209357506000815114806120925750808060200190518101906120919190613b5b565b5b5b6120d2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016120c990613bd4565b60405180910390fd5b5050505050565b6000808214806121015750828283856120f29190613bf4565b9250826120ff91906136dd565b145b612140576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161213790613c9a565b60405180910390fd5b92915050565b600082828461215591906134f1565b9150811115612199576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161219090613d06565b60405180910390fd5b92915050565b6dffffffffffffffffffffffffffff801684111580156121cf57506dffffffffffffffffffffffffffff80168311155b61220e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161220590613d72565b60405180910390fd5b6000640100000000426122219190613d92565b905060006008601c9054906101000a900463ffffffff16826122439190613dc3565b905060008163ffffffff1611801561226c57506000846dffffffffffffffffffffffffffff1614155b801561228957506000836dffffffffffffffffffffffffffff1614155b1561238f578063ffffffff166122ce856122a286612ba5565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16612bd990919063ffffffff16565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166122f69190613bf4565b600960008282546123079190613df7565b925050819055508063ffffffff1661234e8461232287612ba5565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16612bd990919063ffffffff16565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166123769190613bf4565b600a60008282546123879190613df7565b925050819055505b85600860006101000a8154816dffffffffffffffffffffffffffff02191690836dffffffffffffffffffffffffffff160217905550846008600e6101000a8154816dffffffffffffffffffffffffffff02191690836dffffffffffffffffffffffffffff160217905550816008601c6101000a81548163ffffffff021916908363ffffffff1602179055507f1c411e9a96e071241c2f21f7726b17ae89e3cab4c78be50e062b03a9fffbbad1600860009054906101000a90046dffffffffffffffffffffffffffff166008600e9054906101000a90046dffffffffffffffffffffffffffff16604051612483929190613e4d565b60405180910390a1505050505050565b80600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516125719190612fcc565b60405180910390a3505050565b6125d081600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461214690919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061266581600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612bff90919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516127059190612fcc565b60405180910390a3505050565b600080600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663017e7e586040518163ffffffff1660e01b8152600401602060405180830381865afa158015612782573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127a69190613e8b565b90506000600b549050600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16146128c457600081146128bf576000612828612823866dffffffffffffffffffffffffffff16886dffffffffffffffffffffffffffff166120d990919063ffffffff16565b6128de565b90506000612835836128de565b9050808211156128bc576000612868612857838561214690919063ffffffff16565b6000546120d990919063ffffffff16565b90506000612892836128846005876120d990919063ffffffff16565b612bff90919063ffffffff16565b9050600081836128a291906136dd565b905060008111156128b8576128b78782612958565b5b5050505b50505b6128d6565b600081146128d5576000600b819055505b5b505092915050565b6000600382111561294557819050600060016002846128fd91906136dd565b6129079190613df7565b90505b8181101561293f57809150600281828561292491906136dd565b61292e9190613df7565b61293891906136dd565b905061290a565b50612953565b6000821461295257600190505b5b919050565b61296d81600054612bff90919063ffffffff16565b6000819055506129c581600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612bff90919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051612a669190612fcc565b60405180910390a35050565b6000818310612a815781612a83565b825b905092915050565b612add81600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461214690919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550612b358160005461214690919063ffffffff16565b600081905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051612b999190612fcc565b60405180910390a35050565b60006e010000000000000000000000000000826dffffffffffffffffffffffffffff16612bd29190613ee0565b9050919050565b6000816dffffffffffffffffffffffffffff1683612bf79190613f36565b905092915050565b6000828284612c0e9190613df7565b9150811015612c52576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612c4990613fb3565b60405180910390fd5b92915050565b600080fd5b600080fd5b6000819050919050565b612c7581612c62565b8114612c8057600080fd5b50565b600081359050612c9281612c6c565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000612cc382612c98565b9050919050565b612cd381612cb8565b8114612cde57600080fd5b50565b600081359050612cf081612cca565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f840112612d1b57612d1a612cf6565b5b8235905067ffffffffffffffff811115612d3857612d37612cfb565b5b602083019150836001820283011115612d5457612d53612d00565b5b9250929050565b600080600080600060808688031215612d7757612d76612c58565b5b6000612d8588828901612c83565b9550506020612d9688828901612c83565b9450506040612da788828901612ce1565b935050606086013567ffffffffffffffff811115612dc857612dc7612c5d565b5b612dd488828901612d05565b92509250509295509295909350565b600081519050919050565b600082825260208201905092915050565b60005b83811015612e1d578082015181840152602081019050612e02565b83811115612e2c576000848401525b50505050565b6000601f19601f8301169050919050565b6000612e4e82612de3565b612e588185612dee565b9350612e68818560208601612dff565b612e7181612e32565b840191505092915050565b60006020820190508181036000830152612e968184612e43565b905092915050565b60006dffffffffffffffffffffffffffff82169050919050565b612ec181612e9e565b82525050565b600063ffffffff82169050919050565b612ee081612ec7565b82525050565b6000606082019050612efb6000830186612eb8565b612f086020830185612eb8565b612f156040830184612ed7565b949350505050565b60008060408385031215612f3457612f33612c58565b5b6000612f4285828601612ce1565b9250506020612f5385828601612c83565b9150509250929050565b60008115159050919050565b612f7281612f5d565b82525050565b6000602082019050612f8d6000830184612f69565b92915050565b612f9c81612cb8565b82525050565b6000602082019050612fb76000830184612f93565b92915050565b612fc681612c62565b82525050565b6000602082019050612fe16000830184612fbd565b92915050565b60008060006060848603121561300057612fff612c58565b5b600061300e86828701612ce1565b935050602061301f86828701612ce1565b925050604061303086828701612c83565b9150509250925092565b6000819050919050565b61304d8161303a565b82525050565b60006020820190506130686000830184613044565b92915050565b600060ff82169050919050565b6130848161306e565b82525050565b600060208201905061309f600083018461307b565b92915050565b600080604083850312156130bc576130bb612c58565b5b60006130ca85828601612ce1565b92505060206130db85828601612ce1565b9150509250929050565b6000602082840312156130fb576130fa612c58565b5b600061310984828501612ce1565b91505092915050565b60006040820190506131276000830185612fbd565b6131346020830184612fbd565b9392505050565b6131448161306e565b811461314f57600080fd5b50565b6000813590506131618161313b565b92915050565b6131708161303a565b811461317b57600080fd5b50565b60008135905061318d81613167565b92915050565b600080600080600080600060e0888a0312156131b2576131b1612c58565b5b60006131c08a828b01612ce1565b97505060206131d18a828b01612ce1565b96505060406131e28a828b01612c83565b95505060606131f38a828b01612c83565b94505060806132048a828b01613152565b93505060a06132158a828b0161317e565b92505060c06132268a828b0161317e565b91505092959891949750929550565b7f54616b613a204c4f434b45440000000000000000000000000000000000000000600082015250565b600061326b600c83612dee565b915061327682613235565b602082019050919050565b6000602082019050818103600083015261329a8161325e565b9050919050565b7f54616b613a20494e53554646494349454e545f4f55545055545f414d4f554e54600082015250565b60006132d7602083612dee565b91506132e2826132a1565b602082019050919050565b60006020820190508181036000830152613306816132ca565b9050919050565b7f54616b613a20494e53554646494349454e545f4c495155494449545900000000600082015250565b6000613343601c83612dee565b915061334e8261330d565b602082019050919050565b6000602082019050818103600083015261337281613336565b9050919050565b7f54616b613a20494e56414c49445f544f00000000000000000000000000000000600082015250565b60006133af601083612dee565b91506133ba82613379565b602082019050919050565b600060208201905081810360008301526133de816133a2565b9050919050565b600082825260208201905092915050565b82818337600083830152505050565b600061341183856133e5565b935061341e8385846133f6565b61342783612e32565b840190509392505050565b60006080820190506134476000830188612f93565b6134546020830187612fbd565b6134616040830186612fbd565b8181036060830152613474818486613405565b90509695505050505050565b60008151905061348f81612c6c565b92915050565b6000602082840312156134ab576134aa612c58565b5b60006134b984828501613480565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006134fc82612c62565b915061350783612c62565b92508282101561351a576135196134c2565b5b828203905092915050565b7f54616b613a20494e53554646494349454e545f494e5055545f414d4f554e5400600082015250565b600061355b601f83612dee565b915061356682613525565b602082019050919050565b6000602082019050818103600083015261358a8161354e565b9050919050565b7f54616b613a204b00000000000000000000000000000000000000000000000000600082015250565b60006135c7600783612dee565b91506135d282613591565b602082019050919050565b600060208201905081810360008301526135f6816135ba565b9050919050565b60006080820190506136126000830187612fbd565b61361f6020830186612fbd565b61362c6040830185612fbd565b6136396060830184612fbd565b95945050505050565b7f54616b613a20464f5242494444454e0000000000000000000000000000000000600082015250565b6000613678600f83612dee565b915061368382613642565b602082019050919050565b600060208201905081810360008301526136a78161366b565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006136e882612c62565b91506136f383612c62565b925082613703576137026136ae565b5b828204905092915050565b7f54616b613a20494e53554646494349454e545f4c49515549444954595f4d494e60008201527f5445440000000000000000000000000000000000000000000000000000000000602082015250565b600061376a602383612dee565b91506137758261370e565b604082019050919050565b600060208201905081810360008301526137998161375d565b9050919050565b7f54616b613a20494e53554646494349454e545f4c49515549444954595f42555260008201527f4e45440000000000000000000000000000000000000000000000000000000000602082015250565b60006137fc602383612dee565b9150613807826137a0565b604082019050919050565b6000602082019050818103600083015261382b816137ef565b9050919050565b7f54616b613a204558504952454400000000000000000000000000000000000000600082015250565b6000613868600d83612dee565b915061387382613832565b602082019050919050565b600060208201905081810360008301526138978161385b565b9050919050565b60006138a982612c62565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156138dc576138db6134c2565b5b600182019050919050565b600060c0820190506138fc6000830189613044565b6139096020830188612f93565b6139166040830187612f93565b6139236060830186612fbd565b6139306080830185612fbd565b61393d60a0830184612fbd565b979650505050505050565b600081905092915050565b7f1901000000000000000000000000000000000000000000000000000000000000600082015250565b6000613989600283613948565b915061399482613953565b600282019050919050565b6000819050919050565b6139ba6139b58261303a565b61399f565b82525050565b60006139cb8261397c565b91506139d782856139a9565b6020820191506139e782846139a9565b6020820191508190509392505050565b6000608082019050613a0c6000830187613044565b613a19602083018661307b565b613a266040830185613044565b613a336060830184613044565b95945050505050565b7f54616b613a20494e56414c49445f5349474e4154555245000000000000000000600082015250565b6000613a72601783612dee565b9150613a7d82613a3c565b602082019050919050565b60006020820190508181036000830152613aa181613a65565b9050919050565b6000604082019050613abd6000830185612f93565b613aca6020830184612fbd565b9392505050565b600081519050919050565b600081905092915050565b6000613af282613ad1565b613afc8185613adc565b9350613b0c818560208601612dff565b80840191505092915050565b6000613b248284613ae7565b915081905092915050565b613b3881612f5d565b8114613b4357600080fd5b50565b600081519050613b5581613b2f565b92915050565b600060208284031215613b7157613b70612c58565b5b6000613b7f84828501613b46565b91505092915050565b7f54616b613a205452414e534645525f4641494c45440000000000000000000000600082015250565b6000613bbe601583612dee565b9150613bc982613b88565b602082019050919050565b60006020820190508181036000830152613bed81613bb1565b9050919050565b6000613bff82612c62565b9150613c0a83612c62565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615613c4357613c426134c2565b5b828202905092915050565b7f64732d6d6174682d6d756c2d6f766572666c6f77000000000000000000000000600082015250565b6000613c84601483612dee565b9150613c8f82613c4e565b602082019050919050565b60006020820190508181036000830152613cb381613c77565b9050919050565b7f64732d6d6174682d7375622d756e646572666c6f770000000000000000000000600082015250565b6000613cf0601583612dee565b9150613cfb82613cba565b602082019050919050565b60006020820190508181036000830152613d1f81613ce3565b9050919050565b7f54616b613a204f564552464c4f57000000000000000000000000000000000000600082015250565b6000613d5c600e83612dee565b9150613d6782613d26565b602082019050919050565b60006020820190508181036000830152613d8b81613d4f565b9050919050565b6000613d9d82612c62565b9150613da883612c62565b925082613db857613db76136ae565b5b828206905092915050565b6000613dce82612ec7565b9150613dd983612ec7565b925082821015613dec57613deb6134c2565b5b828203905092915050565b6000613e0282612c62565b9150613e0d83612c62565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115613e4257613e416134c2565b5b828201905092915050565b6000604082019050613e626000830185612eb8565b613e6f6020830184612eb8565b9392505050565b600081519050613e8581612cca565b92915050565b600060208284031215613ea157613ea0612c58565b5b6000613eaf84828501613e76565b91505092915050565b60007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff82169050919050565b6000613eeb82613eb8565b9150613ef683613eb8565b9250817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615613f2b57613f2a6134c2565b5b828202905092915050565b6000613f4182613eb8565b9150613f4c83613eb8565b925082613f5c57613f5b6136ae565b5b828204905092915050565b7f64732d6d6174682d6164642d6f766572666c6f77000000000000000000000000600082015250565b6000613f9d601483612dee565b9150613fa882613f67565b602082019050919050565b60006020820190508181036000830152613fcc81613f90565b905091905056fea26469706673582212204641aa7662ecfd390ecbdc501af0fa1f9d2571c6fe7e8e14ab6425b24d964b3f64736f6c634300080b0033a2646970667358221220caa3b9707dafcbfd770203c9b3762968554fed40524dd1c744cb791caec8bea564736f6c634300080b0033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1199:11",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "47:35:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "57:19:11",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "73:2:11",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "67:5:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "67:9:11"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "57:6:11"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "40:6:11",
                "type": ""
              }
            ],
            "src": "7:75:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "177:28:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "194:1:11",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "197:1:11",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "187:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "187:12:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "187:12:11"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "88:117:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "300:28:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "317:1:11",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "320:1:11",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "310:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "310:12:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "310:12:11"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "211:117:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "379:81:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "389:65:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "404:5:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "411:42:11",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "400:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "400:54:11"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "389:7:11"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "361:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "371:7:11",
                "type": ""
              }
            ],
            "src": "334:126:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "511:51:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "521:35:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "550:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "532:17:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "532:24:11"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "521:7:11"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "493:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "503:7:11",
                "type": ""
              }
            ],
            "src": "466:96:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "611:79:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "668:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "677:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "680:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "670:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "670:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "670:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "634:5:11"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "659:5:11"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "641:17:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "641:24:11"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "631:2:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "631:35:11"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "624:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "624:43:11"
                  },
                  "nodeType": "YulIf",
                  "src": "621:63:11"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "604:5:11",
                "type": ""
              }
            ],
            "src": "568:122:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "759:80:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "769:22:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "784:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "778:5:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "778:13:11"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "769:5:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "827:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "800:26:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "800:33:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "800:33:11"
                }
              ]
            },
            "name": "abi_decode_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "737:6:11",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "745:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "753:5:11",
                "type": ""
              }
            ],
            "src": "696:143:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "922:274:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "968:83:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "970:77:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "970:79:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "970:79:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "943:7:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "952:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "939:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "939:23:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "964:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "935:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "935:32:11"
                  },
                  "nodeType": "YulIf",
                  "src": "932:119:11"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1061:128:11",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1076:15:11",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1090:1:11",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1080:6:11",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1105:74:11",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1151:9:11"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1162:6:11"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1147:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1147:22:11"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1171:7:11"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "1115:31:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1115:64:11"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1105:6:11"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "892:9:11",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "903:7:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "915:6:11",
                "type": ""
              }
            ],
            "src": "845:351:11"
          }
        ]
      },
      "contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
      "id": 11,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:8658:11",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "52:81:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "62:65:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "77:5:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "84:42:11",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "73:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "73:54:11"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "62:7:11"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "34:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "44:7:11",
                "type": ""
              }
            ],
            "src": "7:126:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "184:51:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "194:35:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "223:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "205:17:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "205:24:11"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "194:7:11"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "166:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "176:7:11",
                "type": ""
              }
            ],
            "src": "139:96:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "306:53:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "323:3:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "346:5:11"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "328:17:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "328:24:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "316:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "316:37:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "316:37:11"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "294:5:11",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "301:3:11",
                "type": ""
              }
            ],
            "src": "241:118:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "463:124:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "473:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "485:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "496:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "481:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "481:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "473:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "553:6:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "566:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "577:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "562:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "562:17:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "509:43:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "509:71:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "509:71:11"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "435:9:11",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "447:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "458:4:11",
                "type": ""
              }
            ],
            "src": "365:222:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "633:35:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "643:19:11",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "659:2:11",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "653:5:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "653:9:11"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "643:6:11"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "626:6:11",
                "type": ""
              }
            ],
            "src": "593:75:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "763:28:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "780:1:11",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "783:1:11",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "773:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "773:12:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "773:12:11"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "674:117:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "886:28:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "903:1:11",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "906:1:11",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "896:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "896:12:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "896:12:11"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "797:117:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "965:32:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "975:16:11",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "986:5:11"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "975:7:11"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "947:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "957:7:11",
                "type": ""
              }
            ],
            "src": "920:77:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1046:79:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1103:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1112:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1115:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1105:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1105:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1105:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1069:5:11"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1094:5:11"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "1076:17:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1076:24:11"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1066:2:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1066:35:11"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1059:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1059:43:11"
                  },
                  "nodeType": "YulIf",
                  "src": "1056:63:11"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1039:5:11",
                "type": ""
              }
            ],
            "src": "1003:122:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1183:87:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1193:29:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1215:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1202:12:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1202:20:11"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "1193:5:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1258:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "1231:26:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1231:33:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1231:33:11"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "1161:6:11",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1169:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1177:5:11",
                "type": ""
              }
            ],
            "src": "1131:139:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1342:263:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1388:83:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "1390:77:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1390:79:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1390:79:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1363:7:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1372:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1359:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1359:23:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1384:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1355:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1355:32:11"
                  },
                  "nodeType": "YulIf",
                  "src": "1352:119:11"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1481:117:11",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1496:15:11",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1510:1:11",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1500:6:11",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1525:63:11",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1560:9:11"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1571:6:11"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1556:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1556:22:11"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1580:7:11"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1535:20:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1535:53:11"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1525:6:11"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1312:9:11",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1323:7:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1335:6:11",
                "type": ""
              }
            ],
            "src": "1276:329:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1676:53:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1693:3:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1716:5:11"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1698:17:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1698:24:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1686:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1686:37:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1686:37:11"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1664:5:11",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1671:3:11",
                "type": ""
              }
            ],
            "src": "1611:118:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1833:124:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1843:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1855:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1866:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1851:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1851:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1843:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1923:6:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1936:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1947:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1932:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1932:17:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1879:43:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1879:71:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1879:71:11"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1805:9:11",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1817:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1828:4:11",
                "type": ""
              }
            ],
            "src": "1735:222:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2006:79:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2063:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2072:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2075:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2065:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2065:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2065:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2029:5:11"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2054:5:11"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "2036:17:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2036:24:11"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "2026:2:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2026:35:11"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2019:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2019:43:11"
                  },
                  "nodeType": "YulIf",
                  "src": "2016:63:11"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1999:5:11",
                "type": ""
              }
            ],
            "src": "1963:122:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2143:87:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2153:29:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2175:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2162:12:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2162:20:11"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "2153:5:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2218:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "2191:26:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2191:33:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2191:33:11"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "2121:6:11",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2129:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2137:5:11",
                "type": ""
              }
            ],
            "src": "2091:139:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2302:263:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2348:83:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "2350:77:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2350:79:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2350:79:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2323:7:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2332:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2319:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2319:23:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2344:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2315:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2315:32:11"
                  },
                  "nodeType": "YulIf",
                  "src": "2312:119:11"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2441:117:11",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2456:15:11",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2470:1:11",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2460:6:11",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2485:63:11",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2520:9:11"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2531:6:11"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2516:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2516:22:11"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2540:7:11"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2495:20:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2495:53:11"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2485:6:11"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2272:9:11",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2283:7:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2295:6:11",
                "type": ""
              }
            ],
            "src": "2236:329:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2654:391:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2700:83:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "2702:77:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2702:79:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2702:79:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2675:7:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2684:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2671:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2671:23:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2696:2:11",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2667:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2667:32:11"
                  },
                  "nodeType": "YulIf",
                  "src": "2664:119:11"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2793:117:11",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2808:15:11",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2822:1:11",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2812:6:11",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2837:63:11",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2872:9:11"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2883:6:11"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2868:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2868:22:11"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2892:7:11"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2847:20:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2847:53:11"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2837:6:11"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2920:118:11",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2935:16:11",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2949:2:11",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2939:6:11",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2965:63:11",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3000:9:11"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3011:6:11"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2996:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2996:22:11"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3020:7:11"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2975:20:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2975:53:11"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "2965:6:11"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2616:9:11",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2627:7:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2639:6:11",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2647:6:11",
                "type": ""
              }
            ],
            "src": "2571:474:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3147:73:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3164:3:11"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3169:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3157:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3157:19:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3157:19:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3185:29:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3204:3:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3209:4:11",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3200:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3200:14:11"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "3185:11:11"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3119:3:11",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "3124:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "3135:11:11",
                "type": ""
              }
            ],
            "src": "3051:169:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3332:59:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "3354:6:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3362:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3350:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3350:14:11"
                      },
                      {
                        "hexValue": "54616b613a20464f5242494444454e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3366:17:11",
                        "type": "",
                        "value": "Taka: FORBIDDEN"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3343:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3343:41:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3343:41:11"
                }
              ]
            },
            "name": "store_literal_in_memory_19c787c4a35e3994105f70b3b2006baf986573dc622fcd8bcb155074445e71a6",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "3324:6:11",
                "type": ""
              }
            ],
            "src": "3226:165:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3543:220:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3553:74:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3619:3:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3624:2:11",
                        "type": "",
                        "value": "15"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3560:58:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3560:67:11"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "3553:3:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3725:3:11"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_19c787c4a35e3994105f70b3b2006baf986573dc622fcd8bcb155074445e71a6",
                      "nodeType": "YulIdentifier",
                      "src": "3636:88:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3636:93:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3636:93:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3738:19:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3749:3:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3754:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3745:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3745:12:11"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "3738:3:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_19c787c4a35e3994105f70b3b2006baf986573dc622fcd8bcb155074445e71a6_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3531:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3539:3:11",
                "type": ""
              }
            ],
            "src": "3397:366:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3940:248:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3950:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3962:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3973:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3958:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3958:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3950:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3997:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4008:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3993:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3993:17:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "4016:4:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4022:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4012:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4012:20:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3986:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3986:47:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3986:47:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4042:139:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "4176:4:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_19c787c4a35e3994105f70b3b2006baf986573dc622fcd8bcb155074445e71a6_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4050:124:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4050:131:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4042:4:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_19c787c4a35e3994105f70b3b2006baf986573dc622fcd8bcb155074445e71a6__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3920:9:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3935:4:11",
                "type": ""
              }
            ],
            "src": "3769:419:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4300:69:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "4322:6:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4330:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4318:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4318:14:11"
                      },
                      {
                        "hexValue": "54616b613a204944454e544943414c5f414444524553534553",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4334:27:11",
                        "type": "",
                        "value": "Taka: IDENTICAL_ADDRESSES"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4311:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4311:51:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4311:51:11"
                }
              ]
            },
            "name": "store_literal_in_memory_8e08a2415baa104ce3e813adeef57c1753b7b0866f353ce9572165d809a540dd",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "4292:6:11",
                "type": ""
              }
            ],
            "src": "4194:175:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4521:220:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4531:74:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4597:3:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4602:2:11",
                        "type": "",
                        "value": "25"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4538:58:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4538:67:11"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "4531:3:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4703:3:11"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_8e08a2415baa104ce3e813adeef57c1753b7b0866f353ce9572165d809a540dd",
                      "nodeType": "YulIdentifier",
                      "src": "4614:88:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4614:93:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4614:93:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4716:19:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4727:3:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4732:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4723:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4723:12:11"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "4716:3:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_8e08a2415baa104ce3e813adeef57c1753b7b0866f353ce9572165d809a540dd_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4509:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "4517:3:11",
                "type": ""
              }
            ],
            "src": "4375:366:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4918:248:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4928:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4940:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4951:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4936:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4936:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4928:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4975:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4986:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4971:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4971:17:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "4994:4:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5000:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4990:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4990:20:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4964:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4964:47:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4964:47:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5020:139:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "5154:4:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_8e08a2415baa104ce3e813adeef57c1753b7b0866f353ce9572165d809a540dd_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5028:124:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5028:131:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5020:4:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_8e08a2415baa104ce3e813adeef57c1753b7b0866f353ce9572165d809a540dd__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4898:9:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4913:4:11",
                "type": ""
              }
            ],
            "src": "4747:419:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5278:62:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "5300:6:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5308:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5296:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5296:14:11"
                      },
                      {
                        "hexValue": "54616b613a205a45524f5f41444452455353",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5312:20:11",
                        "type": "",
                        "value": "Taka: ZERO_ADDRESS"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5289:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5289:44:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5289:44:11"
                }
              ]
            },
            "name": "store_literal_in_memory_a74eed8bddd9f303b28cd156bb45bee06a3e6895cd72310088d364a28c97895a",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "5270:6:11",
                "type": ""
              }
            ],
            "src": "5172:168:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5492:220:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5502:74:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5568:3:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5573:2:11",
                        "type": "",
                        "value": "18"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5509:58:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5509:67:11"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "5502:3:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5674:3:11"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_a74eed8bddd9f303b28cd156bb45bee06a3e6895cd72310088d364a28c97895a",
                      "nodeType": "YulIdentifier",
                      "src": "5585:88:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5585:93:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5585:93:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5687:19:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5698:3:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5703:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5694:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5694:12:11"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "5687:3:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_a74eed8bddd9f303b28cd156bb45bee06a3e6895cd72310088d364a28c97895a_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5480:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "5488:3:11",
                "type": ""
              }
            ],
            "src": "5346:366:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5889:248:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5899:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5911:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5922:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5907:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5907:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5899:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5946:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5957:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5942:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5942:17:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "5965:4:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5971:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5961:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5961:20:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5935:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5935:47:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5935:47:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5991:139:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "6125:4:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_a74eed8bddd9f303b28cd156bb45bee06a3e6895cd72310088d364a28c97895a_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5999:124:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5999:131:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5991:4:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_a74eed8bddd9f303b28cd156bb45bee06a3e6895cd72310088d364a28c97895a__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5869:9:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5884:4:11",
                "type": ""
              }
            ],
            "src": "5718:419:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6249:61:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "6271:6:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6279:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6267:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6267:14:11"
                      },
                      {
                        "hexValue": "54616b613a20504149525f455849535453",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6283:19:11",
                        "type": "",
                        "value": "Taka: PAIR_EXISTS"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6260:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6260:43:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6260:43:11"
                }
              ]
            },
            "name": "store_literal_in_memory_5b0a69b4b7b9be6c12fcc84949027cfbc3d3dd6cbdf288da49872e2355ff64d6",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "6241:6:11",
                "type": ""
              }
            ],
            "src": "6143:167:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6462:220:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6472:74:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6538:3:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6543:2:11",
                        "type": "",
                        "value": "17"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6479:58:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6479:67:11"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "6472:3:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6644:3:11"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_5b0a69b4b7b9be6c12fcc84949027cfbc3d3dd6cbdf288da49872e2355ff64d6",
                      "nodeType": "YulIdentifier",
                      "src": "6555:88:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6555:93:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6555:93:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6657:19:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6668:3:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6673:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6664:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6664:12:11"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "6657:3:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_5b0a69b4b7b9be6c12fcc84949027cfbc3d3dd6cbdf288da49872e2355ff64d6_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6450:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "6458:3:11",
                "type": ""
              }
            ],
            "src": "6316:366:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6859:248:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6869:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6881:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6892:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6877:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6877:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6869:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6916:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6927:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6912:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6912:17:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "6935:4:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6941:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6931:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6931:20:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6905:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6905:47:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6905:47:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6961:139:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "7095:4:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_5b0a69b4b7b9be6c12fcc84949027cfbc3d3dd6cbdf288da49872e2355ff64d6_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6969:124:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6969:131:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6961:4:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_5b0a69b4b7b9be6c12fcc84949027cfbc3d3dd6cbdf288da49872e2355ff64d6__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6839:9:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6854:4:11",
                "type": ""
              }
            ],
            "src": "6688:419:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7155:52:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7165:35:11",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7190:2:11",
                        "type": "",
                        "value": "96"
                      },
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "7194:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "shl",
                      "nodeType": "YulIdentifier",
                      "src": "7186:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7186:14:11"
                  },
                  "variableNames": [
                    {
                      "name": "newValue",
                      "nodeType": "YulIdentifier",
                      "src": "7165:8:11"
                    }
                  ]
                }
              ]
            },
            "name": "shift_left_96",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7136:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "newValue",
                "nodeType": "YulTypedName",
                "src": "7146:8:11",
                "type": ""
              }
            ],
            "src": "7113:94:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7260:47:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7270:31:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "7295:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "shift_left_96",
                      "nodeType": "YulIdentifier",
                      "src": "7281:13:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7281:20:11"
                  },
                  "variableNames": [
                    {
                      "name": "aligned",
                      "nodeType": "YulIdentifier",
                      "src": "7270:7:11"
                    }
                  ]
                }
              ]
            },
            "name": "leftAlign_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7242:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "aligned",
                "nodeType": "YulTypedName",
                "src": "7252:7:11",
                "type": ""
              }
            ],
            "src": "7213:94:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7360:53:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7370:37:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "7401:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "leftAlign_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "7381:19:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7381:26:11"
                  },
                  "variableNames": [
                    {
                      "name": "aligned",
                      "nodeType": "YulIdentifier",
                      "src": "7370:7:11"
                    }
                  ]
                }
              ]
            },
            "name": "leftAlign_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7342:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "aligned",
                "nodeType": "YulTypedName",
                "src": "7352:7:11",
                "type": ""
              }
            ],
            "src": "7313:100:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7502:74:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7519:3:11"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "7562:5:11"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "7544:17:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7544:24:11"
                          }
                        ],
                        "functionName": {
                          "name": "leftAlign_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "7524:19:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7524:45:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7512:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7512:58:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7512:58:11"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7490:5:11",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "7497:3:11",
                "type": ""
              }
            ],
            "src": "7419:157:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7726:253:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "7799:6:11"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7808:3:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7737:61:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7737:75:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7737:75:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7821:19:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7832:3:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7837:2:11",
                        "type": "",
                        "value": "20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7828:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7828:12:11"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "7821:3:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "7912:6:11"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7921:3:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7850:61:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7850:75:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7850:75:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7934:19:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7945:3:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7950:2:11",
                        "type": "",
                        "value": "20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7941:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7941:12:11"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "7934:3:11"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7963:10:11",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "7970:3:11"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "7963:3:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_address_t_address__to_t_address_t_address__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "7697:3:11",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "7703:6:11",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7711:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "7722:3:11",
                "type": ""
              }
            ],
            "src": "7582:397:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8111:206:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8121:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8133:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8144:2:11",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8129:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8129:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8121:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "8201:6:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8214:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8225:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8210:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8210:17:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8157:43:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8157:71:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8157:71:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "8282:6:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8295:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8306:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8291:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8291:18:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8238:43:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8238:72:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8238:72:11"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8075:9:11",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "8087:6:11",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8095:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8106:4:11",
                "type": ""
              }
            ],
            "src": "7985:332:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8449:206:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8459:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8471:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8482:2:11",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8467:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8467:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8459:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "8539:6:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8552:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8563:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8548:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8548:17:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8495:43:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8495:71:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8495:71:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "8620:6:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8633:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8644:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8629:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8629:18:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8576:43:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8576:72:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8576:72:11"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8413:9:11",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "8425:6:11",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8433:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8444:4:11",
                "type": ""
              }
            ],
            "src": "8323:332:11"
          }
        ]
      },
      "contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_19c787c4a35e3994105f70b3b2006baf986573dc622fcd8bcb155074445e71a6(memPtr) {\n\n        mstore(add(memPtr, 0), \"Taka: FORBIDDEN\")\n\n    }\n\n    function abi_encode_t_stringliteral_19c787c4a35e3994105f70b3b2006baf986573dc622fcd8bcb155074445e71a6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_19c787c4a35e3994105f70b3b2006baf986573dc622fcd8bcb155074445e71a6(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_19c787c4a35e3994105f70b3b2006baf986573dc622fcd8bcb155074445e71a6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_19c787c4a35e3994105f70b3b2006baf986573dc622fcd8bcb155074445e71a6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_8e08a2415baa104ce3e813adeef57c1753b7b0866f353ce9572165d809a540dd(memPtr) {\n\n        mstore(add(memPtr, 0), \"Taka: IDENTICAL_ADDRESSES\")\n\n    }\n\n    function abi_encode_t_stringliteral_8e08a2415baa104ce3e813adeef57c1753b7b0866f353ce9572165d809a540dd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_8e08a2415baa104ce3e813adeef57c1753b7b0866f353ce9572165d809a540dd(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8e08a2415baa104ce3e813adeef57c1753b7b0866f353ce9572165d809a540dd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8e08a2415baa104ce3e813adeef57c1753b7b0866f353ce9572165d809a540dd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_a74eed8bddd9f303b28cd156bb45bee06a3e6895cd72310088d364a28c97895a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Taka: ZERO_ADDRESS\")\n\n    }\n\n    function abi_encode_t_stringliteral_a74eed8bddd9f303b28cd156bb45bee06a3e6895cd72310088d364a28c97895a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_a74eed8bddd9f303b28cd156bb45bee06a3e6895cd72310088d364a28c97895a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a74eed8bddd9f303b28cd156bb45bee06a3e6895cd72310088d364a28c97895a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a74eed8bddd9f303b28cd156bb45bee06a3e6895cd72310088d364a28c97895a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_5b0a69b4b7b9be6c12fcc84949027cfbc3d3dd6cbdf288da49872e2355ff64d6(memPtr) {\n\n        mstore(add(memPtr, 0), \"Taka: PAIR_EXISTS\")\n\n    }\n\n    function abi_encode_t_stringliteral_5b0a69b4b7b9be6c12fcc84949027cfbc3d3dd6cbdf288da49872e2355ff64d6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_5b0a69b4b7b9be6c12fcc84949027cfbc3d3dd6cbdf288da49872e2355ff64d6(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_5b0a69b4b7b9be6c12fcc84949027cfbc3d3dd6cbdf288da49872e2355ff64d6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5b0a69b4b7b9be6c12fcc84949027cfbc3d3dd6cbdf288da49872e2355ff64d6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function shift_left_96(value) -> newValue {\n        newValue :=\n\n        shl(96, value)\n\n    }\n\n    function leftAlign_t_uint160(value) -> aligned {\n        aligned := shift_left_96(value)\n    }\n\n    function leftAlign_t_address(value) -> aligned {\n        aligned := leftAlign_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_address(cleanup_t_address(value)))\n    }\n\n    function abi_encode_tuple_packed_t_address_t_address__to_t_address_t_address__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value0,  pos)\n        pos := add(pos, 20)\n\n        abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value1,  pos)\n        pos := add(pos, 20)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n",
      "id": 11,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "162:1711:0:-:0;;;456:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;513:12;499:11;;:26;;;;;;;;;;;;;;;;;;456:76;162:1711;;88:117:11;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;162:1711:0:-;;;;;;;",
  "deployedSourceMap": "162:1711:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;205:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;231:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;332:25;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;538:94;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1710:161;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;638:923;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;264:62;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1567:137;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;205:20;;;;;;;;;;;;:::o;231:26::-;;;;;;;;;;;;;:::o;332:25::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;538:94::-;587:4;610:8;:15;;;;603:22;;538:94;:::o;1710:161::-;1797:11;;;;;;;;;;;1783:25;;:10;:25;;;1775:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;1852:12;1838:11;;:26;;;;;;;;;;;;;;;;;;1710:161;:::o;638:923::-;708:12;750:6;740:16;;:6;:16;;;;732:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;797:14;813;840:6;831:15;;:6;:15;;;:53;;869:6;877;831:53;;;850:6;858;831:53;796:88;;;;920:1;902:20;;:6;:20;;;;894:51;;;;;;;;;;;;:::i;:::-;;;;;;;;;998:1;963:37;;:7;:15;971:6;963:15;;;;;;;;;;;;;;;:23;979:6;963:23;;;;;;;;;;;;;;;;;;;;;;;;;:37;;;955:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;1062:21;1086:27;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;1062:51;;1123:12;1165:6;1173;1148:32;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1138:43;;;;;;1123:58;;1269:4;1258:8;1252:15;1247:2;1237:8;1233:17;1230:1;1222:52;1214:60;;1303:4;1293:26;;;1320:6;1328;1293:42;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1371:4;1345:7;:15;1353:6;1345:15;;;;;;;;;;;;;;;:23;1361:6;1345:23;;;;;;;;;;;;;;;;:30;;;;;;;;;;;;;;;;;;1411:4;1385:7;:15;1393:6;1385:15;;;;;;;;;;;;;;;:23;1401:6;1385:23;;;;;;;;;;;;;;;;:30;;;;;;;;;;;;;;;;;;1470:8;1484:4;1470:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1524:6;1504:50;;1516:6;1504:50;;;1532:4;1538:8;:15;;;;1504:50;;;;;;;:::i;:::-;;;;;;;;722:839;;;;638:923;;;;:::o;264:62::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1567:137::-;1642:11;;;;;;;;;;;1628:25;;:10;:25;;;1620:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;1691:6;1683:5;;:14;;;;;;;;;;;;;;;;;;1567:137;:::o;-1:-1:-1:-;;;;;;;;:::o;7:126:11:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;674:117::-;783:1;780;773:12;920:77;957:7;986:5;975:16;;920:77;;;:::o;1003:122::-;1076:24;1094:5;1076:24;:::i;:::-;1069:5;1066:35;1056:63;;1115:1;1112;1105:12;1056:63;1003:122;:::o;1131:139::-;1177:5;1215:6;1202:20;1193:29;;1231:33;1258:5;1231:33;:::i;:::-;1131:139;;;;:::o;1276:329::-;1335:6;1384:2;1372:9;1363:7;1359:23;1355:32;1352:119;;;1390:79;;:::i;:::-;1352:119;1510:1;1535:53;1580:7;1571:6;1560:9;1556:22;1535:53;:::i;:::-;1525:63;;1481:117;1276:329;;;;:::o;1611:118::-;1698:24;1716:5;1698:24;:::i;:::-;1693:3;1686:37;1611:118;;:::o;1735:222::-;1828:4;1866:2;1855:9;1851:18;1843:26;;1879:71;1947:1;1936:9;1932:17;1923:6;1879:71;:::i;:::-;1735:222;;;;:::o;1963:122::-;2036:24;2054:5;2036:24;:::i;:::-;2029:5;2026:35;2016:63;;2075:1;2072;2065:12;2016:63;1963:122;:::o;2091:139::-;2137:5;2175:6;2162:20;2153:29;;2191:33;2218:5;2191:33;:::i;:::-;2091:139;;;;:::o;2236:329::-;2295:6;2344:2;2332:9;2323:7;2319:23;2315:32;2312:119;;;2350:79;;:::i;:::-;2312:119;2470:1;2495:53;2540:7;2531:6;2520:9;2516:22;2495:53;:::i;:::-;2485:63;;2441:117;2236:329;;;;:::o;2571:474::-;2639:6;2647;2696:2;2684:9;2675:7;2671:23;2667:32;2664:119;;;2702:79;;:::i;:::-;2664:119;2822:1;2847:53;2892:7;2883:6;2872:9;2868:22;2847:53;:::i;:::-;2837:63;;2793:117;2949:2;2975:53;3020:7;3011:6;3000:9;2996:22;2975:53;:::i;:::-;2965:63;;2920:118;2571:474;;;;;:::o;3051:169::-;3135:11;3169:6;3164:3;3157:19;3209:4;3204:3;3200:14;3185:29;;3051:169;;;;:::o;3226:165::-;3366:17;3362:1;3354:6;3350:14;3343:41;3226:165;:::o;3397:366::-;3539:3;3560:67;3624:2;3619:3;3560:67;:::i;:::-;3553:74;;3636:93;3725:3;3636:93;:::i;:::-;3754:2;3749:3;3745:12;3738:19;;3397:366;;;:::o;3769:419::-;3935:4;3973:2;3962:9;3958:18;3950:26;;4022:9;4016:4;4012:20;4008:1;3997:9;3993:17;3986:47;4050:131;4176:4;4050:131;:::i;:::-;4042:139;;3769:419;;;:::o;4194:175::-;4334:27;4330:1;4322:6;4318:14;4311:51;4194:175;:::o;4375:366::-;4517:3;4538:67;4602:2;4597:3;4538:67;:::i;:::-;4531:74;;4614:93;4703:3;4614:93;:::i;:::-;4732:2;4727:3;4723:12;4716:19;;4375:366;;;:::o;4747:419::-;4913:4;4951:2;4940:9;4936:18;4928:26;;5000:9;4994:4;4990:20;4986:1;4975:9;4971:17;4964:47;5028:131;5154:4;5028:131;:::i;:::-;5020:139;;4747:419;;;:::o;5172:168::-;5312:20;5308:1;5300:6;5296:14;5289:44;5172:168;:::o;5346:366::-;5488:3;5509:67;5573:2;5568:3;5509:67;:::i;:::-;5502:74;;5585:93;5674:3;5585:93;:::i;:::-;5703:2;5698:3;5694:12;5687:19;;5346:366;;;:::o;5718:419::-;5884:4;5922:2;5911:9;5907:18;5899:26;;5971:9;5965:4;5961:20;5957:1;5946:9;5942:17;5935:47;5999:131;6125:4;5999:131;:::i;:::-;5991:139;;5718:419;;;:::o;6143:167::-;6283:19;6279:1;6271:6;6267:14;6260:43;6143:167;:::o;6316:366::-;6458:3;6479:67;6543:2;6538:3;6479:67;:::i;:::-;6472:74;;6555:93;6644:3;6555:93;:::i;:::-;6673:2;6668:3;6664:12;6657:19;;6316:366;;;:::o;6688:419::-;6854:4;6892:2;6881:9;6877:18;6869:26;;6941:9;6935:4;6931:20;6927:1;6916:9;6912:17;6905:47;6969:131;7095:4;6969:131;:::i;:::-;6961:139;;6688:419;;;:::o;7113:94::-;7146:8;7194:5;7190:2;7186:14;7165:35;;7113:94;;;:::o;7213:::-;7252:7;7281:20;7295:5;7281:20;:::i;:::-;7270:31;;7213:94;;;:::o;7313:100::-;7352:7;7381:26;7401:5;7381:26;:::i;:::-;7370:37;;7313:100;;;:::o;7419:157::-;7524:45;7544:24;7562:5;7544:24;:::i;:::-;7524:45;:::i;:::-;7519:3;7512:58;7419:157;;:::o;7582:397::-;7722:3;7737:75;7808:3;7799:6;7737:75;:::i;:::-;7837:2;7832:3;7828:12;7821:19;;7850:75;7921:3;7912:6;7850:75;:::i;:::-;7950:2;7945:3;7941:12;7934:19;;7970:3;7963:10;;7582:397;;;;;:::o;7985:332::-;8106:4;8144:2;8133:9;8129:18;8121:26;;8157:71;8225:1;8214:9;8210:17;8201:6;8157:71;:::i;:::-;8238:72;8306:2;8295:9;8291:18;8282:6;8238:72;:::i;:::-;7985:332;;;;;:::o;8323:::-;8444:4;8482:2;8471:9;8467:18;8459:26;;8495:71;8563:1;8552:9;8548:17;8539:6;8495:71;:::i;:::-;8576:72;8644:2;8633:9;8629:18;8620:6;8576:72;:::i;:::-;8323:332;;;;;:::o",
  "source": "// SPDX-License-Identifier: MIT \npragma solidity =0.8.11;\n\nimport './interfaces/ITakaFactory.sol';\nimport './TakaPair.sol';\nimport './interfaces/ITakaPair.sol';\n\ncontract TakaFactory is ITakaFactory {\n    address public feeTo;\n    address public feeToSetter;\n\n    mapping(address => mapping(address => address)) public getPair;\n    address[] public allPairs;\n\n    event PairCreated(address indexed token0, address indexed token1, address pair, uint);\n\n    constructor(address _feeToSetter){\n        feeToSetter = _feeToSetter;\n    }\n\n    function allPairsLength() external view returns (uint) {\n        return allPairs.length;\n    }\n\n    function createPair(address tokenA, address tokenB) external returns (address pair) {\n        require(tokenA != tokenB, 'Taka: IDENTICAL_ADDRESSES');\n        (address token0, address token1) = tokenA < tokenB ? (tokenA, tokenB) : (tokenB, tokenA);\n        require(token0 != address(0), 'Taka: ZERO_ADDRESS');\n        require(getPair[token0][token1] == address(0), 'Taka: PAIR_EXISTS'); // single check is sufficient\n        bytes memory bytecode = type(TakaPair).creationCode;\n        bytes32 salt = keccak256(abi.encodePacked(token0, token1));\n        assembly {\n            pair := create2(0, add(bytecode, 32), mload(bytecode), salt)\n        }\n        ITakaPair(pair).initialize(token0, token1);\n        getPair[token0][token1] = pair;\n        getPair[token1][token0] = pair; // populate mapping in the reverse direction\n        allPairs.push(pair);\n        emit PairCreated(token0, token1, pair, allPairs.length);\n    }\n\n    function setFeeTo(address _feeTo) external {\n        require(msg.sender == feeToSetter, 'Taka: FORBIDDEN');\n        feeTo = _feeTo;\n    }\n\n    function setFeeToSetter(address _feeToSetter) external {\n        require(msg.sender == feeToSetter, 'Taka: FORBIDDEN');\n        feeToSetter = _feeToSetter;\n    }\n}\n",
  "sourcePath": "/home/humbler/react_all/taka-pools/contracts/TakaFactory.sol",
  "ast": {
    "absolutePath": "project:/contracts/TakaFactory.sol",
    "exportedSymbols": {
      "IERC20": [
        1737
      ],
      "ITakaCallee": [
        1751
      ],
      "ITakaFactory": [
        1804
      ],
      "ITakaLP": [
        1906
      ],
      "ITakaPair": [
        2094
      ],
      "Math": [
        2170
      ],
      "SafeMath": [
        2245
      ],
      "TakaFactory": [
        197
      ],
      "TakaLP": [
        589
      ],
      "TakaPair": [
        1653
      ],
      "UQ112x112": [
        2289
      ]
    },
    "id": 198,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "=",
          "0.8",
          ".11"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:24:0"
      },
      {
        "absolutePath": "project:/contracts/interfaces/ITakaFactory.sol",
        "file": "./interfaces/ITakaFactory.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 198,
        "sourceUnit": 1805,
        "src": "59:39:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/TakaPair.sol",
        "file": "./TakaPair.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 198,
        "sourceUnit": 1654,
        "src": "99:24:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/interfaces/ITakaPair.sol",
        "file": "./interfaces/ITakaPair.sol",
        "id": 4,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 198,
        "sourceUnit": 2095,
        "src": "124:36:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 5,
              "name": "ITakaFactory",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1804,
              "src": "186:12:0"
            },
            "id": 6,
            "nodeType": "InheritanceSpecifier",
            "src": "186:12:0"
          }
        ],
        "canonicalName": "TakaFactory",
        "contractDependencies": [
          1653
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 197,
        "linearizedBaseContracts": [
          197,
          1804
        ],
        "name": "TakaFactory",
        "nameLocation": "171:11:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "baseFunctions": [
              1758
            ],
            "constant": false,
            "functionSelector": "017e7e58",
            "id": 8,
            "mutability": "mutable",
            "name": "feeTo",
            "nameLocation": "220:5:0",
            "nodeType": "VariableDeclaration",
            "scope": 197,
            "src": "205:20:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 7,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "205:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1763
            ],
            "constant": false,
            "functionSelector": "094b7415",
            "id": 10,
            "mutability": "mutable",
            "name": "feeToSetter",
            "nameLocation": "246:11:0",
            "nodeType": "VariableDeclaration",
            "scope": 197,
            "src": "231:26:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 9,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "231:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1772
            ],
            "constant": false,
            "functionSelector": "e6a43905",
            "id": 16,
            "mutability": "mutable",
            "name": "getPair",
            "nameLocation": "319:7:0",
            "nodeType": "VariableDeclaration",
            "scope": 197,
            "src": "264:62:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
              "typeString": "mapping(address => mapping(address => address))"
            },
            "typeName": {
              "id": 15,
              "keyType": {
                "id": 11,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "272:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "264:47:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                "typeString": "mapping(address => mapping(address => address))"
              },
              "valueType": {
                "id": 14,
                "keyType": {
                  "id": 12,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "291:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "283:27:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                  "typeString": "mapping(address => address)"
                },
                "valueType": {
                  "id": 13,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "302:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1779
            ],
            "constant": false,
            "functionSelector": "1e3dd18b",
            "id": 19,
            "mutability": "mutable",
            "name": "allPairs",
            "nameLocation": "349:8:0",
            "nodeType": "VariableDeclaration",
            "scope": 197,
            "src": "332:25:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 17,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "332:7:0",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 18,
              "nodeType": "ArrayTypeName",
              "src": "332:9:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 29,
            "name": "PairCreated",
            "nameLocation": "370:11:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 28,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "token0",
                  "nameLocation": "398:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 29,
                  "src": "382:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 20,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "382:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "token1",
                  "nameLocation": "422:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 29,
                  "src": "406:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 22,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "406:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "pair",
                  "nameLocation": "438:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 29,
                  "src": "430:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "430:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 27,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 29,
                  "src": "444:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 26,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "444:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "381:68:0"
            },
            "src": "364:86:0"
          },
          {
            "body": {
              "id": 38,
              "nodeType": "Block",
              "src": "489:43:0",
              "statements": [
                {
                  "expression": {
                    "id": 36,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 34,
                      "name": "feeToSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10,
                      "src": "499:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 35,
                      "name": "_feeToSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31,
                      "src": "513:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "499:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 37,
                  "nodeType": "ExpressionStatement",
                  "src": "499:26:0"
                }
              ]
            },
            "id": 39,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 32,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 31,
                  "mutability": "mutable",
                  "name": "_feeToSetter",
                  "nameLocation": "476:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 39,
                  "src": "468:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 30,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "468:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "467:22:0"
            },
            "returnParameters": {
              "id": 33,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "489:0:0"
            },
            "scope": 197,
            "src": "456:76:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1784
            ],
            "body": {
              "id": 47,
              "nodeType": "Block",
              "src": "593:39:0",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 44,
                      "name": "allPairs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19,
                      "src": "610:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "id": 45,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "610:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 43,
                  "id": 46,
                  "nodeType": "Return",
                  "src": "603:22:0"
                }
              ]
            },
            "functionSelector": "574f2ba3",
            "id": 48,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "allPairsLength",
            "nameLocation": "547:14:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 40,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "561:2:0"
            },
            "returnParameters": {
              "id": 43,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 48,
                  "src": "587:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 41,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "587:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "586:6:0"
            },
            "scope": 197,
            "src": "538:94:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              1793
            ],
            "body": {
              "id": 159,
              "nodeType": "Block",
              "src": "722:839:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 60,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 58,
                          "name": "tokenA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50,
                          "src": "740:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 59,
                          "name": "tokenB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 52,
                          "src": "750:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "740:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54616b613a204944454e544943414c5f414444524553534553",
                        "id": 61,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "758:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8e08a2415baa104ce3e813adeef57c1753b7b0866f353ce9572165d809a540dd",
                          "typeString": "literal_string \"Taka: IDENTICAL_ADDRESSES\""
                        },
                        "value": "Taka: IDENTICAL_ADDRESSES"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8e08a2415baa104ce3e813adeef57c1753b7b0866f353ce9572165d809a540dd",
                          "typeString": "literal_string \"Taka: IDENTICAL_ADDRESSES\""
                        }
                      ],
                      "id": 57,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "732:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 62,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "732:54:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 63,
                  "nodeType": "ExpressionStatement",
                  "src": "732:54:0"
                },
                {
                  "assignments": [
                    65,
                    67
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 65,
                      "mutability": "mutable",
                      "name": "token0",
                      "nameLocation": "805:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 159,
                      "src": "797:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 64,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "797:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 67,
                      "mutability": "mutable",
                      "name": "token1",
                      "nameLocation": "821:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 159,
                      "src": "813:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 66,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "813:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 78,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 70,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 68,
                        "name": "tokenA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50,
                        "src": "831:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "id": 69,
                        "name": "tokenB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52,
                        "src": "840:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "831:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "components": [
                        {
                          "id": 74,
                          "name": "tokenB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 52,
                          "src": "869:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 75,
                          "name": "tokenA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50,
                          "src": "877:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 76,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "868:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                        "typeString": "tuple(address,address)"
                      }
                    },
                    "id": 77,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "831:53:0",
                    "trueExpression": {
                      "components": [
                        {
                          "id": 71,
                          "name": "tokenA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50,
                          "src": "850:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 72,
                          "name": "tokenB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 52,
                          "src": "858:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 73,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "849:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                        "typeString": "tuple(address,address)"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                      "typeString": "tuple(address,address)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "796:88:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 85,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 80,
                          "name": "token0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 65,
                          "src": "902:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 83,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "920:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 82,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "912:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 81,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "912:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 84,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "912:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "902:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54616b613a205a45524f5f41444452455353",
                        "id": 86,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "924:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a74eed8bddd9f303b28cd156bb45bee06a3e6895cd72310088d364a28c97895a",
                          "typeString": "literal_string \"Taka: ZERO_ADDRESS\""
                        },
                        "value": "Taka: ZERO_ADDRESS"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a74eed8bddd9f303b28cd156bb45bee06a3e6895cd72310088d364a28c97895a",
                          "typeString": "literal_string \"Taka: ZERO_ADDRESS\""
                        }
                      ],
                      "id": 79,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "894:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 87,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "894:51:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88,
                  "nodeType": "ExpressionStatement",
                  "src": "894:51:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 99,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 90,
                              "name": "getPair",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 16,
                              "src": "963:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                                "typeString": "mapping(address => mapping(address => address))"
                              }
                            },
                            "id": 92,
                            "indexExpression": {
                              "id": 91,
                              "name": "token0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 65,
                              "src": "971:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "963:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                              "typeString": "mapping(address => address)"
                            }
                          },
                          "id": 94,
                          "indexExpression": {
                            "id": 93,
                            "name": "token1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 67,
                            "src": "979:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "963:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 97,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "998:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 96,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "990:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 95,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "990:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 98,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "990:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "963:37:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54616b613a20504149525f455849535453",
                        "id": 100,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1002:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5b0a69b4b7b9be6c12fcc84949027cfbc3d3dd6cbdf288da49872e2355ff64d6",
                          "typeString": "literal_string \"Taka: PAIR_EXISTS\""
                        },
                        "value": "Taka: PAIR_EXISTS"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5b0a69b4b7b9be6c12fcc84949027cfbc3d3dd6cbdf288da49872e2355ff64d6",
                          "typeString": "literal_string \"Taka: PAIR_EXISTS\""
                        }
                      ],
                      "id": 89,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "955:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 101,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "955:67:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 102,
                  "nodeType": "ExpressionStatement",
                  "src": "955:67:0"
                },
                {
                  "assignments": [
                    104
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 104,
                      "mutability": "mutable",
                      "name": "bytecode",
                      "nameLocation": "1075:8:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 159,
                      "src": "1062:21:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 103,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "1062:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 109,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 106,
                          "name": "TakaPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1653,
                          "src": "1091:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_TakaPair_$1653_$",
                            "typeString": "type(contract TakaPair)"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_type$_t_contract$_TakaPair_$1653_$",
                            "typeString": "type(contract TakaPair)"
                          }
                        ],
                        "id": 105,
                        "name": "type",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967269,
                        "src": "1086:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 107,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1086:14:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_meta_type_t_contract$_TakaPair_$1653",
                        "typeString": "type(contract TakaPair)"
                      }
                    },
                    "id": 108,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "creationCode",
                    "nodeType": "MemberAccess",
                    "src": "1086:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1062:51:0"
                },
                {
                  "assignments": [
                    111
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 111,
                      "mutability": "mutable",
                      "name": "salt",
                      "nameLocation": "1131:4:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 159,
                      "src": "1123:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 110,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1123:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 119,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 115,
                            "name": "token0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 65,
                            "src": "1165:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 116,
                            "name": "token1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 67,
                            "src": "1173:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 113,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967295,
                            "src": "1148:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 114,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "1148:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 117,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1148:32:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 112,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967288,
                      "src": "1138:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 118,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1138:43:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1123:58:0"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "1200:84:0",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1214:60:0",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1230:1:0",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "bytecode",
                                  "nodeType": "YulIdentifier",
                                  "src": "1237:8:0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1247:2:0",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1233:3:0"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1233:17:0"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "bytecode",
                                  "nodeType": "YulIdentifier",
                                  "src": "1258:8:0"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "1252:5:0"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1252:15:0"
                            },
                            {
                              "name": "salt",
                              "nodeType": "YulIdentifier",
                              "src": "1269:4:0"
                            }
                          ],
                          "functionName": {
                            "name": "create2",
                            "nodeType": "YulIdentifier",
                            "src": "1222:7:0"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1222:52:0"
                        },
                        "variableNames": [
                          {
                            "name": "pair",
                            "nodeType": "YulIdentifier",
                            "src": "1214:4:0"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "london",
                  "externalReferences": [
                    {
                      "declaration": 104,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1237:8:0",
                      "valueSize": 1
                    },
                    {
                      "declaration": 104,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1258:8:0",
                      "valueSize": 1
                    },
                    {
                      "declaration": 55,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1214:4:0",
                      "valueSize": 1
                    },
                    {
                      "declaration": 111,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1269:4:0",
                      "valueSize": 1
                    }
                  ],
                  "id": 120,
                  "nodeType": "InlineAssembly",
                  "src": "1191:93:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 125,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65,
                        "src": "1320:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 126,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 67,
                        "src": "1328:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 122,
                            "name": "pair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 55,
                            "src": "1303:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 121,
                          "name": "ITakaPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2094,
                          "src": "1293:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ITakaPair_$2094_$",
                            "typeString": "type(contract ITakaPair)"
                          }
                        },
                        "id": 123,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1293:15:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ITakaPair_$2094",
                          "typeString": "contract ITakaPair"
                        }
                      },
                      "id": 124,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2093,
                      "src": "1293:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address) external"
                      }
                    },
                    "id": 127,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1293:42:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 128,
                  "nodeType": "ExpressionStatement",
                  "src": "1293:42:0"
                },
                {
                  "expression": {
                    "id": 135,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 129,
                          "name": "getPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16,
                          "src": "1345:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                            "typeString": "mapping(address => mapping(address => address))"
                          }
                        },
                        "id": 132,
                        "indexExpression": {
                          "id": 130,
                          "name": "token0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 65,
                          "src": "1353:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1345:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 133,
                      "indexExpression": {
                        "id": 131,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 67,
                        "src": "1361:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1345:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 134,
                      "name": "pair",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 55,
                      "src": "1371:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1345:30:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 136,
                  "nodeType": "ExpressionStatement",
                  "src": "1345:30:0"
                },
                {
                  "expression": {
                    "id": 143,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 137,
                          "name": "getPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16,
                          "src": "1385:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                            "typeString": "mapping(address => mapping(address => address))"
                          }
                        },
                        "id": 140,
                        "indexExpression": {
                          "id": 138,
                          "name": "token1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 67,
                          "src": "1393:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1385:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 141,
                      "indexExpression": {
                        "id": 139,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65,
                        "src": "1401:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1385:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 142,
                      "name": "pair",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 55,
                      "src": "1411:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1385:30:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 144,
                  "nodeType": "ExpressionStatement",
                  "src": "1385:30:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 148,
                        "name": "pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55,
                        "src": "1484:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 145,
                        "name": "allPairs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19,
                        "src": "1470:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 147,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1470:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 149,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1470:19:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 150,
                  "nodeType": "ExpressionStatement",
                  "src": "1470:19:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 152,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65,
                        "src": "1516:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 153,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 67,
                        "src": "1524:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 154,
                        "name": "pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55,
                        "src": "1532:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 155,
                          "name": "allPairs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19,
                          "src": "1538:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        "id": 156,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "1538:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 151,
                      "name": "PairCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29,
                      "src": "1504:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256)"
                      }
                    },
                    "id": 157,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1504:50:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 158,
                  "nodeType": "EmitStatement",
                  "src": "1499:55:0"
                }
              ]
            },
            "functionSelector": "c9c65396",
            "id": 160,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createPair",
            "nameLocation": "647:10:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 53,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50,
                  "mutability": "mutable",
                  "name": "tokenA",
                  "nameLocation": "666:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 160,
                  "src": "658:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 49,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "658:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 52,
                  "mutability": "mutable",
                  "name": "tokenB",
                  "nameLocation": "682:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 160,
                  "src": "674:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 51,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "674:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "657:32:0"
            },
            "returnParameters": {
              "id": 56,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 55,
                  "mutability": "mutable",
                  "name": "pair",
                  "nameLocation": "716:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 160,
                  "src": "708:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 54,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "708:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "707:14:0"
            },
            "scope": 197,
            "src": "638:923:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              1798
            ],
            "body": {
              "id": 177,
              "nodeType": "Block",
              "src": "1610:94:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 169,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 166,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1628:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 167,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1628:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 168,
                          "name": "feeToSetter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10,
                          "src": "1642:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1628:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54616b613a20464f5242494444454e",
                        "id": 170,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1655:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_19c787c4a35e3994105f70b3b2006baf986573dc622fcd8bcb155074445e71a6",
                          "typeString": "literal_string \"Taka: FORBIDDEN\""
                        },
                        "value": "Taka: FORBIDDEN"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_19c787c4a35e3994105f70b3b2006baf986573dc622fcd8bcb155074445e71a6",
                          "typeString": "literal_string \"Taka: FORBIDDEN\""
                        }
                      ],
                      "id": 165,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1620:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 171,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1620:53:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 172,
                  "nodeType": "ExpressionStatement",
                  "src": "1620:53:0"
                },
                {
                  "expression": {
                    "id": 175,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 173,
                      "name": "feeTo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8,
                      "src": "1683:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 174,
                      "name": "_feeTo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 162,
                      "src": "1691:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1683:14:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 176,
                  "nodeType": "ExpressionStatement",
                  "src": "1683:14:0"
                }
              ]
            },
            "functionSelector": "f46901ed",
            "id": 178,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setFeeTo",
            "nameLocation": "1576:8:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 163,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 162,
                  "mutability": "mutable",
                  "name": "_feeTo",
                  "nameLocation": "1593:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 178,
                  "src": "1585:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 161,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1585:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1584:16:0"
            },
            "returnParameters": {
              "id": 164,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1610:0:0"
            },
            "scope": 197,
            "src": "1567:137:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              1803
            ],
            "body": {
              "id": 195,
              "nodeType": "Block",
              "src": "1765:106:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 187,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 184,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1783:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 185,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1783:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 186,
                          "name": "feeToSetter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10,
                          "src": "1797:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1783:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54616b613a20464f5242494444454e",
                        "id": 188,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1810:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_19c787c4a35e3994105f70b3b2006baf986573dc622fcd8bcb155074445e71a6",
                          "typeString": "literal_string \"Taka: FORBIDDEN\""
                        },
                        "value": "Taka: FORBIDDEN"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_19c787c4a35e3994105f70b3b2006baf986573dc622fcd8bcb155074445e71a6",
                          "typeString": "literal_string \"Taka: FORBIDDEN\""
                        }
                      ],
                      "id": 183,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1775:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 189,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1775:53:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 190,
                  "nodeType": "ExpressionStatement",
                  "src": "1775:53:0"
                },
                {
                  "expression": {
                    "id": 193,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 191,
                      "name": "feeToSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10,
                      "src": "1838:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 192,
                      "name": "_feeToSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 180,
                      "src": "1852:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1838:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 194,
                  "nodeType": "ExpressionStatement",
                  "src": "1838:26:0"
                }
              ]
            },
            "functionSelector": "a2e74af6",
            "id": 196,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setFeeToSetter",
            "nameLocation": "1719:14:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 181,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 180,
                  "mutability": "mutable",
                  "name": "_feeToSetter",
                  "nameLocation": "1742:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 196,
                  "src": "1734:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 179,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1734:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1733:22:0"
            },
            "returnParameters": {
              "id": 182,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1765:0:0"
            },
            "scope": 197,
            "src": "1710:161:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 198,
        "src": "162:1711:0",
        "usedErrors": []
      }
    ],
    "src": "33:1841:0"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/TakaFactory.sol",
    "exportedSymbols": {
      "IERC20": [
        1737
      ],
      "ITakaCallee": [
        1751
      ],
      "ITakaFactory": [
        1804
      ],
      "ITakaLP": [
        1906
      ],
      "ITakaPair": [
        2094
      ],
      "Math": [
        2170
      ],
      "SafeMath": [
        2245
      ],
      "TakaFactory": [
        197
      ],
      "TakaLP": [
        589
      ],
      "TakaPair": [
        1653
      ],
      "UQ112x112": [
        2289
      ]
    },
    "id": 198,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "=",
          "0.8",
          ".11"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:24:0"
      },
      {
        "absolutePath": "project:/contracts/interfaces/ITakaFactory.sol",
        "file": "./interfaces/ITakaFactory.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 198,
        "sourceUnit": 1805,
        "src": "59:39:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/TakaPair.sol",
        "file": "./TakaPair.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 198,
        "sourceUnit": 1654,
        "src": "99:24:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/interfaces/ITakaPair.sol",
        "file": "./interfaces/ITakaPair.sol",
        "id": 4,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 198,
        "sourceUnit": 2095,
        "src": "124:36:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 5,
              "name": "ITakaFactory",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1804,
              "src": "186:12:0"
            },
            "id": 6,
            "nodeType": "InheritanceSpecifier",
            "src": "186:12:0"
          }
        ],
        "canonicalName": "TakaFactory",
        "contractDependencies": [
          1653
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 197,
        "linearizedBaseContracts": [
          197,
          1804
        ],
        "name": "TakaFactory",
        "nameLocation": "171:11:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "baseFunctions": [
              1758
            ],
            "constant": false,
            "functionSelector": "017e7e58",
            "id": 8,
            "mutability": "mutable",
            "name": "feeTo",
            "nameLocation": "220:5:0",
            "nodeType": "VariableDeclaration",
            "scope": 197,
            "src": "205:20:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 7,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "205:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1763
            ],
            "constant": false,
            "functionSelector": "094b7415",
            "id": 10,
            "mutability": "mutable",
            "name": "feeToSetter",
            "nameLocation": "246:11:0",
            "nodeType": "VariableDeclaration",
            "scope": 197,
            "src": "231:26:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 9,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "231:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1772
            ],
            "constant": false,
            "functionSelector": "e6a43905",
            "id": 16,
            "mutability": "mutable",
            "name": "getPair",
            "nameLocation": "319:7:0",
            "nodeType": "VariableDeclaration",
            "scope": 197,
            "src": "264:62:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
              "typeString": "mapping(address => mapping(address => address))"
            },
            "typeName": {
              "id": 15,
              "keyType": {
                "id": 11,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "272:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "264:47:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                "typeString": "mapping(address => mapping(address => address))"
              },
              "valueType": {
                "id": 14,
                "keyType": {
                  "id": 12,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "291:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "283:27:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                  "typeString": "mapping(address => address)"
                },
                "valueType": {
                  "id": 13,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "302:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1779
            ],
            "constant": false,
            "functionSelector": "1e3dd18b",
            "id": 19,
            "mutability": "mutable",
            "name": "allPairs",
            "nameLocation": "349:8:0",
            "nodeType": "VariableDeclaration",
            "scope": 197,
            "src": "332:25:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 17,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "332:7:0",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 18,
              "nodeType": "ArrayTypeName",
              "src": "332:9:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 29,
            "name": "PairCreated",
            "nameLocation": "370:11:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 28,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "token0",
                  "nameLocation": "398:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 29,
                  "src": "382:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 20,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "382:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "token1",
                  "nameLocation": "422:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 29,
                  "src": "406:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 22,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "406:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "pair",
                  "nameLocation": "438:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 29,
                  "src": "430:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "430:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 27,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 29,
                  "src": "444:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 26,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "444:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "381:68:0"
            },
            "src": "364:86:0"
          },
          {
            "body": {
              "id": 38,
              "nodeType": "Block",
              "src": "489:43:0",
              "statements": [
                {
                  "expression": {
                    "id": 36,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 34,
                      "name": "feeToSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10,
                      "src": "499:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 35,
                      "name": "_feeToSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31,
                      "src": "513:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "499:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 37,
                  "nodeType": "ExpressionStatement",
                  "src": "499:26:0"
                }
              ]
            },
            "id": 39,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 32,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 31,
                  "mutability": "mutable",
                  "name": "_feeToSetter",
                  "nameLocation": "476:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 39,
                  "src": "468:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 30,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "468:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "467:22:0"
            },
            "returnParameters": {
              "id": 33,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "489:0:0"
            },
            "scope": 197,
            "src": "456:76:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1784
            ],
            "body": {
              "id": 47,
              "nodeType": "Block",
              "src": "593:39:0",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 44,
                      "name": "allPairs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19,
                      "src": "610:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "id": 45,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "610:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 43,
                  "id": 46,
                  "nodeType": "Return",
                  "src": "603:22:0"
                }
              ]
            },
            "functionSelector": "574f2ba3",
            "id": 48,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "allPairsLength",
            "nameLocation": "547:14:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 40,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "561:2:0"
            },
            "returnParameters": {
              "id": 43,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 48,
                  "src": "587:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 41,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "587:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "586:6:0"
            },
            "scope": 197,
            "src": "538:94:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              1793
            ],
            "body": {
              "id": 159,
              "nodeType": "Block",
              "src": "722:839:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 60,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 58,
                          "name": "tokenA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50,
                          "src": "740:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 59,
                          "name": "tokenB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 52,
                          "src": "750:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "740:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54616b613a204944454e544943414c5f414444524553534553",
                        "id": 61,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "758:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8e08a2415baa104ce3e813adeef57c1753b7b0866f353ce9572165d809a540dd",
                          "typeString": "literal_string \"Taka: IDENTICAL_ADDRESSES\""
                        },
                        "value": "Taka: IDENTICAL_ADDRESSES"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8e08a2415baa104ce3e813adeef57c1753b7b0866f353ce9572165d809a540dd",
                          "typeString": "literal_string \"Taka: IDENTICAL_ADDRESSES\""
                        }
                      ],
                      "id": 57,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "732:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 62,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "732:54:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 63,
                  "nodeType": "ExpressionStatement",
                  "src": "732:54:0"
                },
                {
                  "assignments": [
                    65,
                    67
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 65,
                      "mutability": "mutable",
                      "name": "token0",
                      "nameLocation": "805:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 159,
                      "src": "797:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 64,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "797:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 67,
                      "mutability": "mutable",
                      "name": "token1",
                      "nameLocation": "821:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 159,
                      "src": "813:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 66,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "813:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 78,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 70,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 68,
                        "name": "tokenA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50,
                        "src": "831:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "id": 69,
                        "name": "tokenB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52,
                        "src": "840:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "831:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "components": [
                        {
                          "id": 74,
                          "name": "tokenB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 52,
                          "src": "869:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 75,
                          "name": "tokenA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50,
                          "src": "877:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 76,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "868:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                        "typeString": "tuple(address,address)"
                      }
                    },
                    "id": 77,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "831:53:0",
                    "trueExpression": {
                      "components": [
                        {
                          "id": 71,
                          "name": "tokenA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50,
                          "src": "850:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 72,
                          "name": "tokenB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 52,
                          "src": "858:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 73,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "849:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                        "typeString": "tuple(address,address)"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                      "typeString": "tuple(address,address)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "796:88:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 85,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 80,
                          "name": "token0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 65,
                          "src": "902:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 83,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "920:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 82,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "912:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 81,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "912:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 84,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "912:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "902:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54616b613a205a45524f5f41444452455353",
                        "id": 86,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "924:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a74eed8bddd9f303b28cd156bb45bee06a3e6895cd72310088d364a28c97895a",
                          "typeString": "literal_string \"Taka: ZERO_ADDRESS\""
                        },
                        "value": "Taka: ZERO_ADDRESS"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a74eed8bddd9f303b28cd156bb45bee06a3e6895cd72310088d364a28c97895a",
                          "typeString": "literal_string \"Taka: ZERO_ADDRESS\""
                        }
                      ],
                      "id": 79,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "894:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 87,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "894:51:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88,
                  "nodeType": "ExpressionStatement",
                  "src": "894:51:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 99,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 90,
                              "name": "getPair",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 16,
                              "src": "963:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                                "typeString": "mapping(address => mapping(address => address))"
                              }
                            },
                            "id": 92,
                            "indexExpression": {
                              "id": 91,
                              "name": "token0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 65,
                              "src": "971:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "963:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                              "typeString": "mapping(address => address)"
                            }
                          },
                          "id": 94,
                          "indexExpression": {
                            "id": 93,
                            "name": "token1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 67,
                            "src": "979:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "963:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 97,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "998:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 96,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "990:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 95,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "990:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 98,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "990:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "963:37:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54616b613a20504149525f455849535453",
                        "id": 100,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1002:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5b0a69b4b7b9be6c12fcc84949027cfbc3d3dd6cbdf288da49872e2355ff64d6",
                          "typeString": "literal_string \"Taka: PAIR_EXISTS\""
                        },
                        "value": "Taka: PAIR_EXISTS"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5b0a69b4b7b9be6c12fcc84949027cfbc3d3dd6cbdf288da49872e2355ff64d6",
                          "typeString": "literal_string \"Taka: PAIR_EXISTS\""
                        }
                      ],
                      "id": 89,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "955:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 101,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "955:67:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 102,
                  "nodeType": "ExpressionStatement",
                  "src": "955:67:0"
                },
                {
                  "assignments": [
                    104
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 104,
                      "mutability": "mutable",
                      "name": "bytecode",
                      "nameLocation": "1075:8:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 159,
                      "src": "1062:21:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 103,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "1062:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 109,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 106,
                          "name": "TakaPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1653,
                          "src": "1091:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_TakaPair_$1653_$",
                            "typeString": "type(contract TakaPair)"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_type$_t_contract$_TakaPair_$1653_$",
                            "typeString": "type(contract TakaPair)"
                          }
                        ],
                        "id": 105,
                        "name": "type",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967269,
                        "src": "1086:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 107,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1086:14:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_meta_type_t_contract$_TakaPair_$1653",
                        "typeString": "type(contract TakaPair)"
                      }
                    },
                    "id": 108,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "creationCode",
                    "nodeType": "MemberAccess",
                    "src": "1086:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1062:51:0"
                },
                {
                  "assignments": [
                    111
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 111,
                      "mutability": "mutable",
                      "name": "salt",
                      "nameLocation": "1131:4:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 159,
                      "src": "1123:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 110,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1123:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 119,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 115,
                            "name": "token0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 65,
                            "src": "1165:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 116,
                            "name": "token1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 67,
                            "src": "1173:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 113,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967295,
                            "src": "1148:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 114,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "1148:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 117,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1148:32:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 112,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967288,
                      "src": "1138:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 118,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1138:43:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1123:58:0"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "1200:84:0",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1214:60:0",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1230:1:0",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "bytecode",
                                  "nodeType": "YulIdentifier",
                                  "src": "1237:8:0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1247:2:0",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1233:3:0"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1233:17:0"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "bytecode",
                                  "nodeType": "YulIdentifier",
                                  "src": "1258:8:0"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "1252:5:0"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1252:15:0"
                            },
                            {
                              "name": "salt",
                              "nodeType": "YulIdentifier",
                              "src": "1269:4:0"
                            }
                          ],
                          "functionName": {
                            "name": "create2",
                            "nodeType": "YulIdentifier",
                            "src": "1222:7:0"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1222:52:0"
                        },
                        "variableNames": [
                          {
                            "name": "pair",
                            "nodeType": "YulIdentifier",
                            "src": "1214:4:0"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "london",
                  "externalReferences": [
                    {
                      "declaration": 104,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1237:8:0",
                      "valueSize": 1
                    },
                    {
                      "declaration": 104,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1258:8:0",
                      "valueSize": 1
                    },
                    {
                      "declaration": 55,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1214:4:0",
                      "valueSize": 1
                    },
                    {
                      "declaration": 111,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1269:4:0",
                      "valueSize": 1
                    }
                  ],
                  "id": 120,
                  "nodeType": "InlineAssembly",
                  "src": "1191:93:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 125,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65,
                        "src": "1320:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 126,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 67,
                        "src": "1328:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 122,
                            "name": "pair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 55,
                            "src": "1303:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 121,
                          "name": "ITakaPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2094,
                          "src": "1293:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ITakaPair_$2094_$",
                            "typeString": "type(contract ITakaPair)"
                          }
                        },
                        "id": 123,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1293:15:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ITakaPair_$2094",
                          "typeString": "contract ITakaPair"
                        }
                      },
                      "id": 124,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2093,
                      "src": "1293:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address) external"
                      }
                    },
                    "id": 127,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1293:42:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 128,
                  "nodeType": "ExpressionStatement",
                  "src": "1293:42:0"
                },
                {
                  "expression": {
                    "id": 135,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 129,
                          "name": "getPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16,
                          "src": "1345:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                            "typeString": "mapping(address => mapping(address => address))"
                          }
                        },
                        "id": 132,
                        "indexExpression": {
                          "id": 130,
                          "name": "token0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 65,
                          "src": "1353:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1345:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 133,
                      "indexExpression": {
                        "id": 131,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 67,
                        "src": "1361:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1345:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 134,
                      "name": "pair",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 55,
                      "src": "1371:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1345:30:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 136,
                  "nodeType": "ExpressionStatement",
                  "src": "1345:30:0"
                },
                {
                  "expression": {
                    "id": 143,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 137,
                          "name": "getPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16,
                          "src": "1385:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                            "typeString": "mapping(address => mapping(address => address))"
                          }
                        },
                        "id": 140,
                        "indexExpression": {
                          "id": 138,
                          "name": "token1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 67,
                          "src": "1393:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1385:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 141,
                      "indexExpression": {
                        "id": 139,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65,
                        "src": "1401:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1385:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 142,
                      "name": "pair",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 55,
                      "src": "1411:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1385:30:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 144,
                  "nodeType": "ExpressionStatement",
                  "src": "1385:30:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 148,
                        "name": "pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55,
                        "src": "1484:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 145,
                        "name": "allPairs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19,
                        "src": "1470:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 147,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1470:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 149,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1470:19:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 150,
                  "nodeType": "ExpressionStatement",
                  "src": "1470:19:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 152,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65,
                        "src": "1516:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 153,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 67,
                        "src": "1524:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 154,
                        "name": "pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55,
                        "src": "1532:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 155,
                          "name": "allPairs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19,
                          "src": "1538:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        "id": 156,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "1538:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 151,
                      "name": "PairCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29,
                      "src": "1504:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256)"
                      }
                    },
                    "id": 157,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1504:50:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 158,
                  "nodeType": "EmitStatement",
                  "src": "1499:55:0"
                }
              ]
            },
            "functionSelector": "c9c65396",
            "id": 160,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createPair",
            "nameLocation": "647:10:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 53,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50,
                  "mutability": "mutable",
                  "name": "tokenA",
                  "nameLocation": "666:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 160,
                  "src": "658:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 49,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "658:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 52,
                  "mutability": "mutable",
                  "name": "tokenB",
                  "nameLocation": "682:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 160,
                  "src": "674:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 51,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "674:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "657:32:0"
            },
            "returnParameters": {
              "id": 56,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 55,
                  "mutability": "mutable",
                  "name": "pair",
                  "nameLocation": "716:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 160,
                  "src": "708:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 54,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "708:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "707:14:0"
            },
            "scope": 197,
            "src": "638:923:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              1798
            ],
            "body": {
              "id": 177,
              "nodeType": "Block",
              "src": "1610:94:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 169,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 166,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1628:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 167,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1628:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 168,
                          "name": "feeToSetter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10,
                          "src": "1642:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1628:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54616b613a20464f5242494444454e",
                        "id": 170,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1655:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_19c787c4a35e3994105f70b3b2006baf986573dc622fcd8bcb155074445e71a6",
                          "typeString": "literal_string \"Taka: FORBIDDEN\""
                        },
                        "value": "Taka: FORBIDDEN"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_19c787c4a35e3994105f70b3b2006baf986573dc622fcd8bcb155074445e71a6",
                          "typeString": "literal_string \"Taka: FORBIDDEN\""
                        }
                      ],
                      "id": 165,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1620:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 171,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1620:53:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 172,
                  "nodeType": "ExpressionStatement",
                  "src": "1620:53:0"
                },
                {
                  "expression": {
                    "id": 175,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 173,
                      "name": "feeTo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8,
                      "src": "1683:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 174,
                      "name": "_feeTo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 162,
                      "src": "1691:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1683:14:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 176,
                  "nodeType": "ExpressionStatement",
                  "src": "1683:14:0"
                }
              ]
            },
            "functionSelector": "f46901ed",
            "id": 178,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setFeeTo",
            "nameLocation": "1576:8:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 163,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 162,
                  "mutability": "mutable",
                  "name": "_feeTo",
                  "nameLocation": "1593:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 178,
                  "src": "1585:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 161,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1585:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1584:16:0"
            },
            "returnParameters": {
              "id": 164,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1610:0:0"
            },
            "scope": 197,
            "src": "1567:137:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              1803
            ],
            "body": {
              "id": 195,
              "nodeType": "Block",
              "src": "1765:106:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 187,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 184,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1783:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 185,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1783:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 186,
                          "name": "feeToSetter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10,
                          "src": "1797:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1783:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54616b613a20464f5242494444454e",
                        "id": 188,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1810:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_19c787c4a35e3994105f70b3b2006baf986573dc622fcd8bcb155074445e71a6",
                          "typeString": "literal_string \"Taka: FORBIDDEN\""
                        },
                        "value": "Taka: FORBIDDEN"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_19c787c4a35e3994105f70b3b2006baf986573dc622fcd8bcb155074445e71a6",
                          "typeString": "literal_string \"Taka: FORBIDDEN\""
                        }
                      ],
                      "id": 183,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1775:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 189,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1775:53:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 190,
                  "nodeType": "ExpressionStatement",
                  "src": "1775:53:0"
                },
                {
                  "expression": {
                    "id": 193,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 191,
                      "name": "feeToSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10,
                      "src": "1838:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 192,
                      "name": "_feeToSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 180,
                      "src": "1852:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1838:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 194,
                  "nodeType": "ExpressionStatement",
                  "src": "1838:26:0"
                }
              ]
            },
            "functionSelector": "a2e74af6",
            "id": 196,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setFeeToSetter",
            "nameLocation": "1719:14:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 181,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 180,
                  "mutability": "mutable",
                  "name": "_feeToSetter",
                  "nameLocation": "1742:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 196,
                  "src": "1734:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 179,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1734:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1733:22:0"
            },
            "returnParameters": {
              "id": 182,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1765:0:0"
            },
            "scope": 197,
            "src": "1710:161:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 198,
        "src": "162:1711:0",
        "usedErrors": []
      }
    ],
    "src": "33:1841:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.11+commit.d7f03943.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.2",
  "updatedAt": "2022-01-31T13:07:08.781Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}